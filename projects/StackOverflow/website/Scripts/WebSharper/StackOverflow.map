{
"version": 3,
"sourceRoot": "Source",
"sources": ["StackOverflow/StackOverflow.fs"],
"sourcesContent": ["////-d:FSS_SERVER -d:FSharpStation1547097944900 -d:WEBSHARPER\n////#cd @\"..\\projects\\StackOverflow\\src\"\n//#I @\"..\\packages\\WebSharper\\lib\\net461\"\n//#I @\"..\\packages\\WebSharper.UI\\lib\\net461\"\n//#r @\"..\\packages\\WebSharper\\lib\\net461\\WebSharper.Core.dll\"\n//#r @\"..\\packages\\WebSharper\\lib\\net461\\WebSharper.Core.JavaScript.dll\"\n//#r @\"..\\packages\\WebSharper\\lib\\net461\\WebSharper.Collections.dll\"\n//#r @\"..\\packages\\WebSharper\\lib\\net461\\WebSharper.InterfaceGenerator.dll\"\n//#r @\"..\\packages\\WebSharper\\lib\\net461\\WebSharper.Main.dll\"\n//#r @\"..\\packages\\WebSharper\\lib\\net461\\WebSharper.JQuery.dll\"\n//#r @\"..\\packages\\WebSharper\\lib\\net461\\WebSharper.JavaScript.dll\"\n//#r @\"..\\packages\\WebSharper\\lib\\net461\\WebSharper.Web.dll\"\n//#r @\"..\\packages\\WebSharper\\lib\\net461\\WebSharper.Sitelets.dll\"\n//#r @\"..\\packages\\WebSharper\\lib\\net461\\WebSharper.Control.dll\"\n//#r @\"..\\packages\\WebSharper.UI\\lib\\net461\\HtmlAgilityPack.dll\"\n//#r @\"..\\packages\\WebSharper.UI\\lib\\net461\\WebSharper.UI.dll\"\n//#r @\"..\\packages\\WebSharper.UI\\lib\\net461\\WebSharper.UI.Templating.dll\"\n//#r @\"..\\packages\\WebSharper.UI\\lib\\net461\\WebSharper.UI.Templating.Runtime.dll\"\n//#r @\"..\\packages\\WebSharper.UI\\lib\\net461\\WebSharper.UI.Templating.Common.dll\"\n//#r @\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.1\\mscorlib.dll\"\n//#r @\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.1\\System.Core.dll\"\n//#r @\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.1\\System.dll\"\n//#r @\"..\\packages\\Owin\\lib\\net40\\Owin.dll\"\n//#r @\"..\\packages\\Microsoft.Owin\\lib\\net451\\Microsoft.Owin.dll\"\n//#r @\"..\\packages\\Microsoft.Owin.Hosting\\lib\\net451\\Microsoft.Owin.Hosting.dll\"\n//#r @\"..\\packages\\Microsoft.Owin.Host.HttpListener\\lib\\net451\\Microsoft.Owin.Host.HttpListener.dll\"\n//#r @\"..\\packages\\WebSharper.Owin\\lib\\net461\\WebSharper.Owin.dll\"\n//#r @\"..\\packages\\WebSharper.Owin\\lib\\net461\\HttpMultipartParser.dll\"\n//#r @\"..\\packages\\Microsoft.Owin.StaticFiles\\lib\\net451\\Microsoft.Owin.StaticFiles.dll\"\n//#r @\"..\\packages\\Microsoft.Owin.FileSystems\\lib\\net451\\Microsoft.Owin.FileSystems.dll\"\n/// Root namespace for all code\n//#define FSharpStation1547097944900\n#if INTERACTIVE\nmodule FsRoot   =\n#else\nnamespace FsRoot\n#endif\n\n    #if WEBSHARPER\n    //#define NOFRAMEWORK --noframework\n    //#I @\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.1\"\n    //#I @\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.1\\Facades\"\n    //#r @\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.1\\mscorlib.dll\"\n    //#r @\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.1\\System.Core.dll\"\n    \n    //#I @\"..\\packages\\WebSharper\\lib\\net461\"\n    //#I @\"..\\packages\\WebSharper.UI\\lib\\net461\"\n    \n    //#r @\"..\\packages\\WebSharper\\lib\\net461\\WebSharper.Core.dll\"\n    //#r @\"..\\packages\\WebSharper\\lib\\net461\\WebSharper.Core.JavaScript.dll\"\n    //#r @\"..\\packages\\WebSharper\\lib\\net461\\WebSharper.Collections.dll\"\n    //#r @\"..\\packages\\WebSharper\\lib\\net461\\WebSharper.InterfaceGenerator.dll\"\n    //#r @\"..\\packages\\WebSharper\\lib\\net461\\WebSharper.Main.dll\"\n    //#r @\"..\\packages\\WebSharper\\lib\\net461\\WebSharper.JQuery.dll\"\n    //#r @\"..\\packages\\WebSharper\\lib\\net461\\WebSharper.JavaScript.dll\"\n    //#r @\"..\\packages\\WebSharper\\lib\\net461\\WebSharper.Web.dll\"\n    //#r @\"..\\packages\\WebSharper\\lib\\net461\\WebSharper.Sitelets.dll\"\n    //#r @\"..\\packages\\WebSharper\\lib\\net461\\WebSharper.Control.dll\"\n    //#r @\"..\\packages\\WebSharper.UI\\lib\\net461\\HtmlAgilityPack.dll\"\n    //#r @\"..\\packages\\WebSharper.UI\\lib\\net461\\WebSharper.UI.dll\"\n    //#r @\"..\\packages\\WebSharper.UI\\lib\\net461\\WebSharper.UI.Templating.dll\"\n    //#r @\"..\\packages\\WebSharper.UI\\lib\\net461\\WebSharper.UI.Templating.Runtime.dll\"\n    //#r @\"..\\packages\\WebSharper.UI\\lib\\net461\\WebSharper.UI.Templating.Common.dll\"\n    \n    open WebSharper\n    open WebSharper.JavaScript\n    open WebSharper.UI\n    open WebSharper.UI.Client\n    type on   = WebSharper.UI.Html.on\n    type attr = WebSharper.UI.Html.attr\n    #else\n    /// dummy WebSharper definition in order to avoid having to use #if WEBSHARPER all the time\n    module WebSharper =\n        type RpcAttribute() =\n            let a = 1\n        type JavaScriptAttribute(translate:bool) =\n            let a = 1\n            new() = JavaScriptAttribute true\n        type InlineAttribute(code:string) =\n            let a = 1\n            new() = InlineAttribute \"\"\n        type DirectAttribute(code:string) =\n            let a = 1\n    \n    open WebSharper\n    \n    #endif\n    \n    //#cd @\"..\\projects\\StackOverflow\\src\"\n    \n    //#r @\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.1\\mscorlib.dll\"\n    //#r @\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.1\\System.Core.dll\"\n    //#r @\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.1\\System.dll\"\n    \n    //#define WEBSHARPER\n    \n    [< JavaScript >]\n    module StackOverflow =\n        open WebSharper\n        open WebSharper.JavaScript\n        open WebSharper.UI\n        open WebSharper.UI.Client\n        open WebSharper.UI.Html\n        \n        module ClientCode =\n            [<JavaScriptExport>]\n            type [<AbstractClass>] A() = \n                abstract member Doc: Map<string, A> -> Doc\n        \n            [<JavaScriptExport>]\n            type [<AbstractClass>] B() =\n                inherit A() \n        \n            [< JavaScriptExport >]\n            type C() =\n                inherit B()\n                override __.Doc map =\n                    div [] [\n                        hr [] []\n                        div [] [h1 [] [text \"C\"]]\n                        div [attr.``class`` \"jumbotron\"] [ map |> map.[\"D\"].Doc ]\n                    ]\n            [<JavaScriptExport >]\n            type D() =\n                inherit A()\n                override __.Doc _ =\n                    span [attr.``class`` \"alert alart-info\"] [ text \"D\" ]\n        \n            let types = new System.Collections.Generic.Dictionary<string, string * A>()\n        \n            let registerType line (a:'a) =\n                if IsClient \n                then types.Add(line                  , (line, a :> A) )     \n                else types.Add(typedefof<'a>.FullName, (line, a :> A) )\n        \n            registerType (__SOURCE_FILE__ + __LINE__) <| C()\n            registerType (__SOURCE_FILE__ + __LINE__) <| D()\n        \n            let fixType v =\n                match types.TryGetValue v with\n                | false, _         -> C() :> A\n                | true , (line, a) -> a\n        \n            let fixMap (m:Map<string, string>) =\n                m |> Seq.map (fun kvp -> kvp.Key, fixType kvp.Value) |> Map\n        \n        \n        [<JavaScript>]\n        module Client =\n        \n            let getDoc (m:Map<string, string>) (docName : string) =\n                let m = ClientCode.fixMap m\n                m.[docName].Doc(m)\n        \n        open WebSharper\n        open WebSharper.Sitelets\n        open WebSharper.JavaScript\n        open WebSharper.UI\n        open WebSharper.UI.Client\n        open WebSharper.UI.Html\n        open WebSharper.UI.Server\n        \n        type EndPoint =\n            | [<EndPoint \"/\">] Home\n        \n        [< JavaScript false >]\n        module Templating =\n            type MainTemplate = Templating.Template< @\"..\\website\\Main.html\">\n        \n            // Compute a menubar where the menu item for the given endpoint is active\n            let MenuBar (ctx: Context<EndPoint>) endpoint : Doc list =\n                let ( => ) txt act =\n                     li [if endpoint = act then yield attr.``class`` \"active\"] [\n                        a [attr.href (ctx.Link act)] [text txt]\n                     ]\n                [\n                    \"Home\" => EndPoint.Home\n                ]\n        \n            let Main ctx action (title: string) (body: Doc list) =\n                Content.Page(\n                    MainTemplate()\n                        .Title(title)\n                        .MenuBar(MenuBar ctx action)\n                        .Body(body)\n                        .Doc()\n                )\n        \n        [< JavaScript false >]\n        module Site =\n            open WebSharper.UI.Html\n        \n            let HomePage _map ctx =\n                Templating.Main ctx EndPoint.Home \"Home\" [\n                    Doc.ClientSide <@  Client.getDoc _map \"C\" @>\n                ]\n        \n            let mutable _map : Map<string, string> = Map.empty\n        \n            let addMapping<'T> name = \n                match ClientCode.types.TryGetValue (typedefof<'T>.FullName) with\n                | false,_         -> printfn \"Could not map %s to type %s. It is not registered\" name (typedefof<'T>.FullName)\n                | true ,(line, a) -> \n                _map <- _map |> Map.add name line\n        \n            addMapping<ClientCode.A> \"A\"\n            addMapping<ClientCode.C> \"C\"\n            addMapping<ClientCode.D> \"D\"\n                \n        \n            [<Website>]\n            let Main =\n                Application.MultiPage (fun ctx endpoint ->\n                    match endpoint with\n                    | EndPoint.Home -> HomePage _map ctx\n                )\n        \n        //#r @\"..\\packages\\Owin\\lib\\net40\\Owin.dll\"\n        //#r @\"..\\packages\\Microsoft.Owin\\lib\\net451\\Microsoft.Owin.dll\"\n        //#r @\"..\\packages\\Microsoft.Owin.Hosting\\lib\\net451\\Microsoft.Owin.Hosting.dll\"\n        //#r @\"..\\packages\\Microsoft.Owin.Host.HttpListener\\lib\\net451\\Microsoft.Owin.Host.HttpListener.dll\"\n        //#r @\"..\\packages\\WebSharper.Owin\\lib\\net461\\WebSharper.Owin.dll\"\n        //#r @\"..\\packages\\WebSharper.Owin\\lib\\net461\\HttpMultipartParser.dll\"\n        //#r @\"..\\packages\\Microsoft.Owin.StaticFiles\\lib\\net451\\Microsoft.Owin.StaticFiles.dll\"\n        //#r @\"..\\packages\\Microsoft.Owin.FileSystems\\lib\\net451\\Microsoft.Owin.FileSystems.dll\"\n        //#define FSS_SERVER\n        [< JavaScript false >]\n        module Server =\n            open global.Owin\n            open Microsoft.Owin.Hosting\n            open Microsoft.Owin.StaticFiles\n            open Microsoft.Owin.FileSystems\n            open WebSharper.Owin\n            open WebSharper.Sitelets\n            open WebSharper.UI.Server\n            open WebSharper.UI.Templating\n            open WebSharper.UI.Html\n        \n            let [< Literal >] rootdir = @\"..\\website\"\n        \n            [< EntryPoint >]\n            let Main args =\n                printfn \"Usage: FSharpStation URL ROOT_DIRECTORY MaxMessageSize\"\n                let url           = args |> Seq.tryItem 0 |>                   Option.defaultValue \"http://localhost:9007/\"\n                let rootDirectory = args |> Seq.tryItem 1 |>                   Option.defaultValue @\"..\\website\"\n                let max           = args |> Seq.tryItem 2 |> Option.map int |> Option.defaultValue 1_000_000\n                use server = WebApp.Start(url, fun appB ->\n                    appB.UseWebSharper(WebSharperOptions(ServerRootDirectory = rootdir\n                                                       , Sitelet             = (Some <| Site.Main)\n                                                       , BinDirectory        = \".\"\n                                                       , Debug               = true))\n                        .UseStaticFiles(StaticFileOptions(FileSystem = PhysicalFileSystem(rootDirectory)))\n                    |> ignore)\n                stdout.WriteLine(\"Listening on {0}, hit enter to finish\", url)\n                stdin.ReadLine() |> ignore\n                0\n        \n        "],
"names": [],
"mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;E,AA0GmC,kBAAC,C;;;;;E,AAID,gBAAC,C;;;;;U,AAOhB,sBACI,uBAAQ,C,AACR,sBAAQ,qBAAO,aAAK,GAAG,C,AAAA,E,AAAC,E,AAAC,C,AACzB,mBAAK,yBAAe,WAAW,C,AAAA,G,AAAW,GAAG,U,AAAE,GAAG,C,AAAK,K,AAAb,GAAa,C,AAAA,E,AAAE,E,AAC5D,C;;;;;E,AAPJ,gBAAC,C;;;;;U,AAWc,oBACN,yBAAe,kBAAkB,C,AAAA,G,AAAI,aAAK,GAAG,C,AAAA,E,AADtC,C;;;;;E,AAFhB,gBAAC,C;;;;S,AAqBF,kBAAwD,QAAnD;;SAAoB,CAAA,GAAG,E,AAAI,C,AAAE,mBAAQ,GAAG,E,AAAM,C,AAAA,C,AAAA,C;G,AAAA,C,AAA9C,CAA8C,C,AAAQ,C,AAAA,C;;;;;K,AALrD,EAAA,IAAmB,E,AAAnB,kBAAK,a,AAAa,CAAC,C,AAAnB;;;;;;;;;GAAmB,C,AAAA,C,AAAnB,CAAmB,C,AAAA,E;S,AAAnB,CAAmB,G,AAAA,C,AAEH,CAAC,G,AAAA,G,AAFE,C,AAAnB,WAAmB,C;;;;E,AAPpB,kBAAK,K,AAAK,IAAI,C,AAAqB,CAAA,IAAI,C,AAAE,CAAM,C,AAAA,C,AACG,C;;;;;;;;;;M,AAkB/C,kBAAkB,CAAC,C,AAAA,C;S,AAC3B,GAAC,U,AAAE,OAAO,C,AAAC,K,AAAK,GAAC,C,AAAC,C;;;;;;;;a,AAxBV,sBAA+D,C;0B,AAO7D,kBAAe,C,AAAG,KAAQ,C,AAAxC,WAAyC,E;0B,AAC3B,kBAAe,C,AAAG,KAAQ,C,AAAxC,WAAyC,E;;;"
}
