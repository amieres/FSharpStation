{"snippets": [{"snpId": {"SnippetId" :"0c368c5f-275f-43ac-bc76-dd2d21860dc0"}, "snpName": "Hello WASM", "snpContent": "#if WEBSHARPER\r\n[< WebSharper.SPAEntryPoint >]\r\n#endif\r\nlet main =\r\n    \"Wasm\"\r\n    |> printfn \"Hello %s!\"", "snpParentIdO": null, "snpPredIds": [], "snpProperties": [["Explanation", "##### Adventures trying to compile FSharp using WASM.\r\n\r\nThis is the typical \r\n**Hello World** program\r\nwith an FSharp twist!\r\n"]], "snpModified": 1570182854032}, {"snpId": {"SnippetId" :"ac14f1f3-d220-4669-9c70-a33117a7ccf7"}, "snpName": "Fibonacci", "snpContent": "\nopen WebSharper\n\n[< Inline \"(function (n) { return n.getFullYear() + '-' + ('0'+(n.getMonth()+1)).slice(-2) + '-' +  ('0'+n.getDate()).slice(-2) + ' '+('0'+n.getHours()).slice(-2)+ ':'+('0'+n.getMinutes()).slice(-2)+ ':'+('0'+n.getSeconds()).slice(-2)+ ':'+('00'+n.getMilliseconds()).slice(-3) })(new Date(Date.now()))\" >]\nlet nowStamp() = \n    let t = System.DateTime.UtcNow // in two steps to avoid Warning: The value has been copied to ensure the original is not mutated\n    t.ToString(\"yyyy-MM-dd HH:mm:ss.fff\", System.Globalization.CultureInfo.InvariantCulture)\n\nlet rec fibo = function\n    | 0 | 1 -> 1\n    | n -> fibo (n - 2) + fibo (n - 1)\n\nlet printFibo n = printfn \"fibo(%d) = %i\" n (fibo n)\n\nlet tryParseWith tryParseFunc (s:string)  = tryParseFunc s |> function\n    | true, v    -> Some v\n    | false, _   -> None\n\nlet parseIntO = tryParseWith System.Int32.TryParse\n\nlet doFibos args =\n    args\n    |> Array.choose parseIntO\n    |> Array.iter   printFibo\n\nlet inline TimeIt n f p =\n    printfn \"%s Starting %s\" (nowStamp()) n\n    let start = System.DateTime.UtcNow.Ticks\n    f p\n    let elapsedSpan = new System.TimeSpan(System.DateTime.UtcNow.Ticks - start)\n    printfn \"%s Finished %s %0d:%02d:%02d.%03d\" (nowStamp()) n (int elapsedSpan.TotalHours) elapsedSpan.Minutes elapsedSpan.Seconds elapsedSpan.Milliseconds\n\n\"data 1 10 20 30 40\".Split [|' '|] \n|> TimeIt \"doFibos\" doFibos\n\n//[< EntryPoint >]\n//let main args =\n//    args\n//    |> TimeIt \"doFibos\" doFibos\n//    0", "snpParentIdO": null, "snpPredIds": [], "snpProperties": [["Explanation", "This one shows how slow interpreted .Net can be:\r\n\r\n| | |\r\n|----------|-------------|\r\n| **Run** (before)    | `Finished doFibos 0:01:51.502` |\r\n| **Run**    | `Finished doFibos 0:00:33.664` |\r\n| **Run JS** | `Finished doFibos 0:00:02.816` |\r\n| native | `Finished doFibos 0:00:01.201` |\r\n<br>"]], "snpModified": 1584392743467}, {"snpId": {"SnippetId" :"41acae2a-1310-4ab4-8ff0-bd4160a79c98"}, "snpName": "Fibonacci memoized", "snpContent": "open WebSharper\r\n\r\nmodule Memoize =\r\n\r\n    /// returns 3 functions:\r\n    ///    checkO  : ('p->'v option) \r\n    ///    getOrAdd: ('p->('p->'v)->'v) \r\n    ///    clear   : (unit->unit)\r\n    [<Inline>]\r\n    let getStoreWithDict (cache: System.Collections.Generic.Dictionary<_, _>) =\r\n        let checkO v     = let mutable res = Unchecked.defaultof<_>\r\n                           let ok          = cache.TryGetValue(v, &res)\r\n                           if  ok then Some res else None\r\n        let store  v res = cache.[v] <- res\r\n                           res\r\n        let getOrAdd p f = checkO p |> Option.defaultWith (fun () -> f p |> store p )\r\n        (checkO, getOrAdd), cache.Clear\r\n\r\n    /// creates a Dictionary to store memoized values\r\n    /// returns 3 functions:\r\n    ///    checkO  : ('p->'v option) \r\n    ///    getOrAdd: ('p->('p->'v)->'v) \r\n    ///    clear   : (unit->unit)\r\n    [<Inline>]\r\n    let getStore() = getStoreWithDict (System.Collections.Generic.Dictionary<_, _>() )\r\n\r\n    /// Memoizes function f using the provided cache\r\n    /// getCache() returns 1 function:\r\n    ///    getOrAdd: ('p->('p->'v)->'v) \r\n    [< Inline >]\r\n    let memoizeStore (getOrAdd:('key -> ('key -> 'value) -> 'value) ) f =\r\n        fun p -> getOrAdd p f\r\n\r\n\r\n    /// Memoizes the function f using a Dictionary\r\n    /// Returns the memoized function and a clear() function\r\n    /// The dictionary can be reset using the clear() function\r\n    [< Inline >]\r\n    let memoizeResetable f =\r\n        let (check, getOrAdd), clear = getStore()\r\n        let memoF = memoizeStore getOrAdd f\r\n        memoF, clear\r\n\r\n    /// Memoizes the function f using the provided Dictionary\r\n    [<Inline>]\r\n    let memoizeWithDict dict f =\r\n        let (check, getOrAdd), clear = getStoreWithDict dict\r\n        let memoF = memoizeStore getOrAdd f\r\n        memoF\r\n\r\n    /// Memoizes the function f and returns Dictionary\r\n    [<Inline>]\r\n    let memoizeDict f =\r\n        let dict = System.Collections.Generic.Dictionary<_, _>() \r\n        let (check, getOrAdd), clear = getStoreWithDict dict\r\n        let memoF = memoizeStore getOrAdd f\r\n        memoF, dict\r\n\r\n    /// Memoizes the function f using a Dictionary\r\n    [<Inline>]\r\n    let memoize f = memoizeResetable f |> fst\r\n\r\n\r\n\r\n#if WEBSHARPER\r\nopen WebSharper\r\n\r\n[< Inline \"(function (n) { return n.getFullYear() + '-' + ('0'+(n.getMonth()+1)).slice(-2) + '-' +  ('0'+n.getDate()).slice(-2) + ' '+('0'+n.getHours()).slice(-2)+ ':'+('0'+n.getMinutes()).slice(-2)+ ':'+('0'+n.getSeconds()).slice(-2)+ ':'+('00'+n.getMilliseconds()).slice(-3) })(new Date(Date.now()))\" >]\r\n#endif\r\nlet nowStamp() = \r\n    let t = System.DateTime.UtcNow // in two steps to avoid Warning: The value has been copied to ensure the original is not mutated\r\n    t.ToString(\"yyyy-MM-dd HH:mm:ss.fff\", System.Globalization.CultureInfo.InvariantCulture)\r\n\r\nlet rec fibo = function\r\n    | 0 | 1 -> 1\r\n    | n -> fiboM (n - 2) + fiboM (n - 1)\r\n\r\nand fiboM = Memoize.memoize fibo \r\n\r\nlet printFibo n = printfn \"fibo(%d) = %i\" n (fibo n)\r\n\r\nlet tryParseWith tryParseFunc (s:string)  = tryParseFunc s |> function\r\n    | true, v    -> Some v\r\n    | false, _   -> None\r\n\r\nlet parseIntO = tryParseWith System.Int32.TryParse\r\n\r\nlet doFibos args =\r\n    args\r\n    |> Array.choose parseIntO\r\n    |> Array.iter   printFibo\r\n\r\nlet inline TimeIt n f p =\r\n    printfn \"%s Starting %s\" (nowStamp()) n\r\n    let start = System.DateTime.UtcNow.Ticks\r\n    f p\r\n    let elapsedSpan = new System.TimeSpan(System.DateTime.UtcNow.Ticks - start)\r\n    printfn \"%s Finished %s %0d:%02d:%02d.%03d\" (nowStamp()) n (int elapsedSpan.TotalHours) elapsedSpan.Minutes elapsedSpan.Seconds elapsedSpan.Milliseconds\r\n\r\n\"data 1 10 20 30 1000\".Split [|' '|] \r\n|> TimeIt \"doFibos\" doFibos\r\n", "snpParentIdO": null, "snpPredIds": [], "snpProperties": [["Explanation", "When memoized fibo becomes very fast!\r\n\r\n- Regular_ `fibos` with `1 10 20 30 40` takes less about 3 seconds\r\n- Regular_ `fibos` with `1 10 20 30 45` takes less about 40 seconds\r\n- Memoized `fibos` with `1 10 20 30 1000` takes only a few milliseconds\r\n"]], "snpModified": 1613258683615}, {"snpId": {"SnippetId" :"e56ad472-a04d-4bb7-881c-f4fee2b17615"}, "snpName": "dir", "snpContent": "open System\r\nopen System.Text\r\n\r\n[< WebSharper.Inline \"throw('dir cannot run in JavaScript')\" >]\r\nlet rec dir d =\r\n    try \r\n        if d = \"/proc/self/fd\" then printfn \"skip /proc/self/fd\"  else\r\n        for file in System.IO.Directory.GetFiles(d, \"*\") do\r\n            printfn \"F %s\" file  \r\n        for subdir in System.IO.Directory.EnumerateDirectories d do\r\n            printfn \"D %s\" subdir\r\n            dir            subdir\r\n    with e -> printfn \"%s\" e.Message \r\n\r\ndir \"/\"", "snpParentIdO": null, "snpPredIds": [], "snpProperties": [["Explanation", "Cannot be translated to JavaSCript"]], "snpModified": 1584506079170}, {"snpId": {"SnippetId" :"a2ffc7f6-f86e-46bb-8882-29d97b3fd4f9"}, "snpName": "Advent of Code", "snpContent": "", "snpParentIdO": null, "snpPredIds": [], "snpProperties": [["Explanation", "Just some code from the [Advent of code 2018](https://adventofcode.com/2018/day/1)"]], "snpModified": 1570183121660}, {"snpId": {"SnippetId" :"19e4b72d-17d7-4bb5-8aba-7baf98250720"}, "snpName": "Day 1", "snpContent": "    open System.Collections.Generic\n\n    let inline (|>!) v f = f v ; v\n    let inline (>>!) g f = g >> fun v -> f v ; v\n    let inline print v   = \n        match box v with\n        | :? string as s -> printfn \"%s\" s\n        | __             -> printfn \"%A\" v\n    \n    let input = [|\n        +3\n        +15\n        -1\n        -18\n        +3\n        -10\n        +3\n        +10\n        -8\n        -20\n        +13\n        +11\n        -21\n        -10\n        -16\n        -2\n        -6\n        +19\n        -8\n        +12\n        -13\n        +4\n        -9\n        -20\n        +12\n        +15\n        -17\n        -18\n        +11\n        -17\n        -9\n        -12\n        -9\n        +3\n        +9\n        -6\n        +18\n        +16\n        +9\n        -11\n        -1\n        +8\n        -20\n        +17\n        -3\n        -16\n        -7\n        +10\n        +6\n        +3\n        +15\n        +3\n        -2\n        +9\n        -8\n        -6\n        +11\n        +5\n        +24\n        +10\n        +4\n        -8\n        +2\n        +13\n        -16\n        +13\n        -16\n        +11\n        +7\n        -9\n        -13\n        -12\n        +17\n        -4\n        -5\n        -1\n        +16\n        +22\n        +8\n        +12\n        +9\n        +2\n        -3\n        -5\n        +12\n        +4\n        +4\n        +8\n        +18\n        +9\n        -14\n        -11\n        -5\n        -11\n        +15\n        -18\n        -7\n        -12\n        +1\n        +5\n        -18\n        +14\n        -13\n        -10\n        +17\n        +8\n        +11\n        -12\n        +20\n        -16\n        +22\n        +5\n        +1\n        -9\n        +16\n        +13\n        +6\n        +5\n        +7\n        -4\n        -4\n        -7\n        +16\n        +4\n        -1\n        -15\n        -11\n        +19\n        +9\n        +17\n        -15\n        +21\n        -7\n        +4\n        -16\n        -3\n        -9\n        +4\n        +11\n        +12\n        +11\n        +7\n        +12\n        +14\n        -6\n        -1\n        -18\n        -3\n        -13\n        +4\n        +10\n        -15\n        -10\n        -8\n        +15\n        +15\n        +19\n        +16\n        -3\n        -14\n        +13\n        +16\n        +1\n        +10\n        +9\n        +7\n        -11\n        -19\n        +2\n        -3\n        +10\n        -2\n        +13\n        -19\n        -7\n        +3\n        +18\n        +1\n        +9\n        +2\n        +12\n        -13\n        -9\n        -7\n        -15\n        -18\n        -6\n        -1\n        -8\n        -12\n        +19\n        -1\n        -14\n        -6\n        -16\n        -4\n        +1\n        +4\n        -22\n        -19\n        -2\n        +4\n        +18\n        -8\n        -19\n        -16\n        +6\n        +16\n        -7\n        +4\n        +8\n        -20\n        -11\n        -11\n        +20\n        +15\n        +19\n        +30\n        +19\n        +19\n        -11\n        -18\n        +4\n        +1\n        +21\n        -9\n        -9\n        +12\n        +18\n        -1\n        -6\n        +12\n        +16\n        +12\n        +3\n        +1\n        -9\n        -15\n        -15\n        -1\n        -1\n        -18\n        -32\n        -11\n        -17\n        -20\n        +4\n        +14\n        -1\n        +16\n        +20\n        +53\n        +19\n        +16\n        +14\n        +14\n        +6\n        -8\n        +14\n        -17\n        -5\n        +3\n        +14\n        -3\n        -15\n        -10\n        -19\n        +17\n        +3\n        +17\n        +5\n        +14\n        -7\n        +5\n        +14\n        +18\n        -2\n        -19\n        +8\n        +10\n        +15\n        -6\n        +13\n        -11\n        +19\n        +10\n        -15\n        -15\n        +2\n        -4\n        -3\n        +11\n        +2\n        +18\n        +3\n        +17\n        +9\n        -16\n        -8\n        +6\n        +15\n        -11\n        -3\n        +20\n        -1\n        +12\n        +1\n        +8\n        +11\n        -8\n        +6\n        +7\n        +17\n        -12\n        +13\n        -8\n        +16\n        +15\n        -8\n        -12\n        +7\n        -12\n        -18\n        +5\n        +5\n        +7\n        -8\n        +6\n        -4\n        -15\n        +17\n        -15\n        -10\n        -1\n        +17\n        +18\n        -21\n        -19\n        -9\n        +19\n        +16\n        +18\n        -5\n        -15\n        +19\n        -11\n        +10\n        +9\n        -1\n        +4\n        +4\n        +9\n        -5\n        +20\n        +4\n        -18\n        +17\n        +12\n        -18\n        +14\n        -21\n        -15\n        -5\n        -18\n        -17\n        -19\n        +11\n        +12\n        -20\n        -19\n        +12\n        -9\n        +8\n        -1\n        -22\n        +4\n        +15\n        +14\n        +9\n        -10\n        -26\n        -22\n        -10\n        +7\n        +9\n        -1\n        -16\n        -21\n        -18\n        +8\n        +6\n        +18\n        +1\n        +5\n        +11\n        +18\n        +6\n        +20\n        -7\n        -10\n        -5\n        +33\n        -21\n        -8\n        -13\n        -5\n        +7\n        +1\n        -7\n        -39\n        -14\n        -12\n        +16\n        -14\n        -15\n        +4\n        +2\n        +12\n        -11\n        +16\n        +8\n        +15\n        -1\n        +21\n        -5\n        +13\n        -18\n        -7\n        +2\n        -15\n        +19\n        +8\n        +26\n        -24\n        +37\n        +59\n        +21\n        -19\n        +18\n        +6\n        -11\n        +15\n        -2\n        +5\n        -2\n        +20\n        +8\n        +2\n        -7\n        +18\n        -8\n        -1\n        -8\n        +3\n        +17\n        +12\n        +18\n        +2\n        -8\n        +3\n        +40\n        +3\n        +21\n        +5\n        -1\n        +15\n        +2\n        +16\n        -50\n        +15\n        +5\n        +21\n        -31\n        -17\n        -15\n        -10\n        -9\n        -2\n        -18\n        -14\n        +7\n        -14\n        +6\n        -20\n        -8\n        +13\n        -27\n        +8\n        +2\n        -16\n        +3\n        -7\n        -6\n        +23\n        +31\n        +52\n        -6\n        -1\n        +2\n        -54\n        -42\n        -6\n        +18\n        +2\n        +1\n        -29\n        +36\n        -42\n        +7\n        -146\n        -2\n        -14\n        -13\n        +19\n        -8\n        +19\n        -15\n        -18\n        -4\n        -18\n        -1\n        +2\n        -3\n        +11\n        -16\n        -23\n        -9\n        -30\n        -31\n        +58\n        +18\n        -19\n        +45\n        +11\n        +14\n        -16\n        +19\n        -10\n        +17\n        +12\n        -2\n        -8\n        +19\n        -50\n        +8\n        -114\n        -40\n        -62\n        -153\n        -60\n        +12\n        -23\n        -40\n        -87\n        +377\n        -79652\n        -12\n        +1\n        -9\n        -5\n        -12\n        -14\n        +9\n        -3\n        -2\n        +8\n        -15\n        -18\n        +19\n        -6\n        +4\n        -14\n        -2\n        -18\n        -19\n        -8\n        +2\n        +11\n        -19\n        -11\n        +5\n        -3\n        +4\n        +1\n        -3\n        +9\n        +7\n        +15\n        -9\n        -2\n        -6\n        +3\n        +2\n        +10\n        +9\n        +3\n        -5\n        -4\n        +12\n        +15\n        -6\n        -11\n        -9\n        -15\n        +9\n        -19\n        -15\n        +4\n        +7\n        +7\n        -16\n        +15\n        -4\n        -19\n        -8\n        -11\n        -18\n        -14\n        -18\n        -16\n        +5\n        +5\n        +12\n        -9\n        -16\n        +2\n        -6\n        -2\n        +20\n        -13\n        -9\n        -16\n        +4\n        -1\n        +2\n        -3\n        -17\n        -2\n        -11\n        +1\n        +6\n        +17\n        -4\n        -15\n        -3\n        -19\n        +6\n        -16\n        -18\n        -6\n        +2\n        +12\n        -9\n        +6\n        +7\n        -6\n        +7\n        -9\n        -18\n        -3\n        +10\n        -17\n        +11\n        +16\n        +16\n        +6\n        +13\n        -17\n        +2\n        +3\n        +17\n        -10\n        +8\n        -1\n        -9\n        -15\n        +11\n        +2\n        -14\n        +7\n        -12\n        -19\n        -3\n        -7\n        -7\n        -15\n        -17\n        +5\n        +3\n        +14\n        +6\n        -5\n        +17\n        -9\n        -5\n        +1\n        -8\n        -13\n        +7\n        +17\n        -12\n        -14\n        -18\n        +10\n        +16\n        -3\n        -19\n        +7\n        +14\n        +14\n        +11\n        -1\n        +18\n        -16\n        -4\n        +10\n        -14\n        +9\n        -17\n        -1\n        +4\n        -14\n        -16\n        +1\n        -14\n        -7\n        +1\n        +7\n        -11\n        -4\n        -14\n        +19\n        -11\n        +8\n        +14\n        +8\n        -15\n        -18\n        +2\n        -17\n        -19\n        +13\n        +3\n        +6\n        +8\n        -10\n        +7\n        -3\n        -9\n        +8\n        +12\n        -4\n        +15\n        +7\n        +10\n        +11\n        -10\n        -20\n        -16\n        +11\n        -1\n        -21\n        -13\n        -19\n        -15\n        -15\n        -7\n        +10\n        +19\n        -17\n        -6\n        -10\n        -13\n        +12\n        -18\n        +16\n        +10\n        -13\n        +12\n        -1\n        +12\n        +12\n        +10\n        +16\n        -18\n        -5\n        -10\n        -13\n        -7\n        +19\n        +14\n        +18\n        -2\n        -4\n        -13\n        +14\n        +18\n        -7\n        +11\n        -13\n        -21\n        -12\n        +14\n        +16\n        +7\n        -19\n        +16\n        +7\n        +2\n        -5\n        +1\n        +19\n        +16\n        +14\n        +9\n        +12\n        +14\n        -8\n        -28\n        +13\n        +11\n        +13\n        -17\n        -21\n        +15\n        -37\n        -11\n        +19\n        +1\n        +8\n        +12\n        -1\n        -27\n        -21\n        -19\n        -21\n        +15\n        -24\n        -7\n        -11\n        -17\n        -15\n        -11\n        -11\n        +8\n        -9\n        -9\n        -4\n        -6\n        +15\n        -10\n        -3\n        +19\n        +9\n        +8\n        +6\n        +11\n        -4\n        -14\n        -1\n        +3\n        -15\n        +17\n        +18\n        -10\n        -22\n        -15\n        +14\n        +6\n        -14\n        -11\n        +4\n        -18\n        +5\n        -16\n        -9\n        -13\n        +14\n        +3\n        +9\n        +17\n        -9\n        +22\n        -12\n        -8\n        -5\n        -1\n        -6\n        -6\n        -19\n        +17\n        +9\n        +28\n        +20\n        +14\n        +11\n        +6\n        +7\n        -2\n        +17\n        +17\n        -12\n        +7\n        +21\n        -2\n        -4\n        +10\n        +2\n        +12\n        -19\n        -22\n        -8\n        -20\n        +25\n        -17\n        -15\n        -8\n        -1\n        +13\n        -15\n        +16\n        +15\n        +19\n        -128\n        -4\n        -16\n        -4\n        +13\n        -10\n        +20\n        -16\n        -13\n        +15\n        +9\n        +1\n        -11\n        -16\n        +13\n        +1\n        +15\n        +1\n        -31\n        +11\n        -53\n        -11\n        -9\n        -16\n        -11\n        +7\n        +6\n        +13\n        +6\n        -12\n        -3\n        +16\n        +2\n        -5\n        +7\n        -16\n        +17\n        -13\n        -9\n        +15\n        -3\n        +13\n        +8\n        +5\n        -8\n        -1\n        -5\n        -21\n        +25\n        +23\n        +12\n        +1\n        -2\n        +7\n        -25\n        -51\n        -5\n        +4\n        +14\n        -8\n        +4\n        +11\n        -5\n        -21\n        -14\n        +9\n        +8\n        -13\n        +4\n        +80915\n    |]\n\n    input \n    |> Array.sum\n    |> print\n\n    let rec findRepeat i t s =\n        let n = t + input.[i]\n        if Set.contains n s then n else\n        Set.add n s |> findRepeat (if i = input.Length - 1 then 0 else i + 1) n\n\n    Set [ 0 ]\n    |> findRepeat  0 0\n    |> print\n\n    let s = new HashSet<int>()\n\n    let rec findRepeatH i t =\n        let n = t + input.[i]\n        if s.Contains n then n else\n        s.Add n |> ignore\n        findRepeatH (if i = input.Length - 1 then 0 else i + 1) n\n\n    findRepeatH  0 0\n    |> print\n\n    // --------------------------------------------------\n\n    let cycle xs = seq { while true do yield! xs }    \n    let accumusum xs = Seq.scan(fun acc elem -> acc + elem) 0 xs\n\n    let tryfind (sum, s:int Set) =\n        match s.Contains(sum) with\n        | true -> Some(sum)\n        | false -> None\n\n    let scanstate (sum, s:int Set) el =\n        el, s.Add(sum)\n\n    let findfreqcycle (data:int seq) =\n        let seen = Seq.scan scanstate (Seq.head data, Set.empty) (Seq.tail data)\n        Seq.pick tryfind seen\n\n    input |> cycle |> accumusum |> findfreqcycle |> print\n", "snpParentIdO": {"SnippetId" :"a2ffc7f6-f86e-46bb-8882-29d97b3fd4f9"}, "snpPredIds": [], "snpProperties": [["Explanation", "This one runs interpreted but barely:\r\n\r\n| | | |\r\n|-|-|-|\r\n| with | `let main` | WASM crashes |\r\n| without | `let main` | it runs |\r\n| **Run JS**|  | Stack overflow |"]], "snpModified": 1584394869613}, {"snpId": {"SnippetId" :"cc20f800-de06-4852-94e5-dd708c8ad00c"}, "snpName": "Day 10", "snpContent": "#if WEBSHARPER\n[< WebSharper.SPAEntryPoint >]\n#endif\nlet main =\n\n    let inline (|>!) v f = f v ; v\n    let inline (>>!) g f = g >> fun v -> f v ; v\n    let inline print v   = \n        match box v with\n        | :? string as s -> printfn \"%s\" s\n        | __             -> printfn \"%A\" v\n\n    let input = \n      [|\n        ( 11063,  22004), (-1, -2)\n        ( 32870, -21613), (-3,  2)\n        ( 43767,  22003), (-4, -2)\n        ( 32865, -10705), (-3,  1)\n        ( 21984, -43419), (-2,  4)\n        ( 43775,  11100), (-4, -1)\n        ( 43770, -43425), (-4,  4)\n        ( 32881,  22004), (-3, -2)\n        ( 32899,  11102), (-3, -1)\n        ( 43764,  11098), (-4, -1)\n        ( 43805,  32912), (-4, -3)\n        ( 54680, -32516), (-5,  3)\n        ( 32851,  11107), (-3, -1)\n        ( 54696,  22012), (-5, -2)\n        ( 43794,  43816), (-4, -4)\n        (-54388, -43427), ( 5,  4)\n        (-43465,  43815), ( 4, -4)\n        ( 11036,  32916), (-1, -3)\n        ( 43798,  54726), (-4, -5)\n        (-10722,  54727), ( 1, -5)\n        ( 32897, -54331), (-3,  5)\n        ( 11043, -32520), (-1,  3)\n        ( 32868, -10706), (-3,  1)\n        (-10760,  54718), ( 1, -5)\n        (-43449, -21611), ( 4,  2)\n        ( 43751,  11105), (-4, -1)\n        (-21625,  43817), ( 2, -4)\n        ( 54685,  54723), (-5, -5)\n        ( 54711, -43418), (-5,  4)\n        (-54375,  32914), ( 5, -3)\n        ( 21939,  32908), (-2, -3)\n        (-43477, -10703), ( 4,  1)\n        ( 54699,  22012), (-5, -2)\n        (-54372,  43819), ( 5, -4)\n        ( 32841, -21609), (-3,  2)\n        (-32533,  43816), ( 3, -4)\n        (-54399,  54722), ( 5, -5)\n        (-21649, -21613), ( 2,  2)\n        ( 43767,  11107), (-4, -1)\n        (-21636,  11106), ( 2, -1)\n        ( 21964, -10705), (-2,  1)\n        ( 54663, -10712), (-5,  1)\n        ( 32865,  43818), (-3, -4)\n        ( 21992,  22009), (-2, -2)\n        ( 32881, -54331), (-3,  5)\n        (-32553, -32516), ( 3,  3)\n        (-54381,  54723), ( 5, -5)\n        (-32572,  32908), ( 3, -3)\n        ( 43764, -54327), (-4,  5)\n        (-43482, -32519), ( 4,  3)\n        (-43494, -54325), ( 4,  5)\n        ( 11060, -21612), (-1,  2)\n        (-54350, -10707), ( 5,  1)\n        (-32568,  54719), ( 3, -5)\n        (-43458,  11104), ( 4, -1)\n        (-32548, -54328), ( 3,  5)\n        (-32589,  54725), ( 3, -5)\n        ( 43786,  32911), (-4, -3)\n        ( 21940, -32521), (-2,  3)\n        ( 32860, -54323), (-3,  5)\n        (-54363, -21610), ( 5,  2)\n        ( 32846,  54720), (-3, -5)\n        (-54396, -32517), ( 5,  3)\n        (-32560,  22006), ( 3, -2)\n        (-32549, -10706), ( 3,  1)\n        ( 54711, -21613), (-5,  2)\n        (-21676, -10704), ( 2,  1)\n        ( 32878,  11099), (-3, -1)\n        ( 32886, -10710), (-3,  1)\n        (-21628,  54719), ( 2, -5)\n        ( 43802,  54723), (-4, -5)\n        (-43485, -21608), ( 4,  2)\n        (-10719, -10703), ( 1,  1)\n        ( 11043, -21617), (-1,  2)\n        (-54343, -54328), ( 5,  5)\n        (-10746, -21614), ( 1,  2)\n        (-54399, -54326), ( 5,  5)\n        ( 43794,  32913), (-4, -3)\n        ( 21984, -32519), (-2,  3)\n        ( 43770,  43813), (-4, -4)\n        ( 32878, -21616), (-3,  2)\n        ( 21965, -43424), (-2,  4)\n        (-10746, -32519), ( 1,  3)\n        ( 11088, -54328), (-1,  5)\n        (-32541, -10710), ( 3,  1)\n        ( 32873, -10703), (-3,  1)\n        ( 32846, -10706), (-3,  1)\n        ( 11087,  32916), (-1, -3)\n        ( 54667, -21610), (-5,  2)\n        ( 21984, -10707), (-2,  1)\n        ( 11065, -10708), (-1,  1)\n        ( 54708, -54332), (-5,  5)\n        (-54362, -43418), ( 5,  4)\n        (-32549,  11106), ( 3, -1)\n        ( 54684, -10705), (-5,  1)\n        (-54347, -54331), ( 5,  5)\n        ( 43765, -21613), (-4,  2)\n        ( 11082,  54725), (-1, -5)\n        ( 11050, -10703), (-1,  1)\n        ( 21948, -32514), (-2,  3)\n        (-21648, -32519), ( 2,  3)\n        (-43474,  54727), ( 4, -5)\n        (-54343, -43418), ( 5,  4)\n        ( 11031, -43425), (-1,  4)\n        ( 11076,  32909), (-1, -3)\n        ( 11059, -54325), (-1,  5)\n        (-43493, -54327), ( 4,  5)\n        ( 54694, -32518), (-5,  3)\n        (-54391, -54324), ( 5,  5)\n        (-21660, -32521), ( 2,  3)\n        ( 54699, -10706), (-5,  1)\n        (-54383,  11106), ( 5, -1)\n        (-10755,  54723), ( 1, -5)\n        (-10720, -21608), ( 1,  2)\n        (-21631, -54332), ( 2,  5)\n        (-54378,  32910), ( 5, -3)\n        (-10759, -10712), ( 1,  1)\n        ( 43786, -32519), (-4,  3)\n        (-32570,  54718), ( 3, -5)\n        (-32540, -43423), ( 3,  4)\n        (-21632, -21616), ( 2,  2)\n        (-10718, -32522), ( 1,  3)\n        ( 11060,  11103), (-1, -1)\n        (-43446, -43427), ( 4,  4)\n        (-21660,  43820), ( 2, -4)\n        ( 43773, -43422), (-4,  4)\n        (-10735,  22007), ( 1, -2)\n        ( 32846,  43820), (-3, -4)\n        (-10779,  54720), ( 1, -5)\n        (-54394, -43423), ( 5,  4)\n        (-10747,  32917), ( 1, -3)\n        (-10755,  32917), ( 1, -3)\n        ( 54680, -32515), (-5,  3)\n        ( 11079,  32916), (-1, -3)\n        ( 43803,  54727), (-4, -5)\n        ( 11082,  32915), (-1, -3)\n        ( 54710,  32908), (-5, -3)\n        ( 54652, -10711), (-5,  1)\n        (-10750,  22012), ( 1, -2)\n        ( 43758,  32909), (-4, -3)\n        (-10759,  54721), ( 1, -5)\n        (-32541,  11105), ( 3, -1)\n        (-54349,  54724), ( 5, -5)\n        (-43442, -54331), ( 4,  5)\n        (-32577, -32519), ( 3,  3)\n        (-54399, -21611), ( 5,  2)\n        ( 21952, -21617), (-2,  2)\n        ( 11087, -10710), (-1,  1)\n        ( 21994, -54323), (-2,  5)\n        ( 11076, -21614), (-1,  2)\n        ( 11064, -32515), (-1,  3)\n        (-43476,  11107), ( 4, -1)\n        ( 32869, -32514), (-3,  3)\n        ( 11036,  32911), (-1, -3)\n        (-32541,  43819), ( 3, -4)\n        (-10767,  43815), ( 1, -4)\n        ( 43746,  22008), (-4, -2)\n        (-10775,  11103), ( 1, -1)\n        (-32585, -32521), ( 3,  3)\n        (-54359,  32916), ( 5, -3)\n        ( 54652,  11099), (-5, -1)\n        (-32549, -54323), ( 3,  5)\n        ( 43775, -10703), (-4,  1)\n        ( 32877, -54326), (-3,  5)\n        ( 11036, -43422), (-1,  4)\n        ( 54702,  22010), (-5, -2)\n        ( 32867,  43816), (-3, -4)\n        ( 43772,  22007), (-4, -2)\n        (-10742,  54719), ( 1, -5)\n        ( 54696, -10712), (-5,  1)\n        ( 11071, -21613), (-1,  2)\n        ( 43797,  54720), (-4, -5)\n        ( 21965, -32514), (-2,  3)\n        ( 54691,  54725), (-5, -5)\n        ( 21965,  22010), (-2, -2)\n        (-10723,  43821), ( 1, -4)\n        ( 54672,  43814), (-5, -4)\n        ( 43775,  54726), (-4, -5)\n        (-54351, -10707), ( 5,  1)\n        ( 21976, -10703), (-2,  1)\n        (-43474, -43424), ( 4,  4)\n        (-43489,  11101), ( 4, -1)\n        (-10755, -32513), ( 1,  3)\n        (-54362,  32916), ( 5, -3)\n        (-21655, -43424), ( 2,  4)\n        ( 43791, -32513), (-4,  3)\n        ( 21960,  22009), (-2, -2)\n        (-54351,  11102), ( 5, -1)\n        ( 54707, -32514), (-5,  3)\n        ( 21985, -32517), (-2,  3)\n        ( 32862,  11100), (-3, -1)\n        ( 32874,  32914), (-3, -3)\n        (-21636, -54332), ( 2,  5)\n        ( 21961,  54720), (-2, -5)\n        (-54394, -43423), ( 5,  4)\n        ( 21948, -21616), (-2,  2)\n        (-32584, -21614), ( 3,  2)\n        ( 32886,  22008), (-3, -2)\n        (-21627, -32522), ( 2,  3)\n        (-43460, -32517), ( 4,  3)\n        ( 54696, -32519), (-5,  3)\n        (-32560, -32522), ( 3,  3)\n        (-32578,  54718), ( 3, -5)\n        (-54399,  54723), ( 5, -5)\n        (-43470,  22003), ( 4, -2)\n        ( 11036,  11104), (-1, -1)\n        (-10760, -43427), ( 1,  4)\n        (-54387, -21611), ( 5,  2)\n        (-32530, -21608), ( 3,  2)\n        ( 43799,  32908), (-4, -3)\n        (-10763, -32513), ( 1,  3)\n        (-54378,  43813), ( 5, -4)\n        (-54394, -54325), ( 5,  5)\n        ( 43796, -21611), (-4,  2)\n        ( 54675,  54725), (-5, -5)\n        (-32589, -32513), ( 3,  3)\n        (-21684, -54330), ( 2,  5)\n        ( 43780, -10708), (-4,  1)\n        (-43449, -54329), ( 4,  5)\n        (-54343,  43819), ( 5, -4)\n        ( 32898,  54722), (-3, -5)\n        ( 21976, -21612), (-2,  2)\n        ( 54668,  54718), (-5, -5)\n        ( 11044, -10712), (-1,  1)\n        ( 11063, -32522), (-1,  3)\n        ( 11071, -43423), (-1,  4)\n        ( 54704,  54727), (-5, -5)\n        ( 54651,  11101), (-5, -1)\n        ( 54656, -43418), (-5,  4)\n        ( 54696, -10711), (-5,  1)\n        ( 32899,  54718), (-3, -5)\n        (-21672, -54328), ( 2,  5)\n        ( 54684,  32910), (-5, -3)\n        (-54367,  11099), ( 5, -1)\n        ( 11075,  11102), (-1, -1)\n        (-32554,  22008), ( 3, -2)\n        ( 54712, -10703), (-5,  1)\n        (-10743,  11100), ( 1, -1)\n        ( 11076,  43820), (-1, -4)\n        ( 32881, -43427), (-3,  4)\n        (-32577, -43426), ( 3,  4)\n        ( 32870,  54727), (-3, -5)\n        (-32536,  43822), ( 3, -4)\n        (-32573,  22012), ( 3, -2)\n        ( 32873, -10711), (-3,  1)\n        (-21655, -54325), ( 2,  5)\n        ( 43791,  43819), (-4, -4)\n        (-54388,  22003), ( 5, -2)\n        ( 54712,  32908), (-5, -3)\n        (-43491, -32517), ( 4,  3)\n        ( 21960,  11106), (-2, -1)\n        ( 32886,  11100), (-3, -1)\n        (-10767,  43819), ( 1, -4)\n        (-10739, -21615), ( 1,  2)\n        (-21624,  54722), ( 2, -5)\n        ( 32841,  54725), (-3, -5)\n        (-32549, -43421), ( 3,  4)\n        ( 11079, -21617), (-1,  2)\n        (-54378,  43813), ( 5, -4)\n        ( 32889, -21614), (-3,  2)\n        ( 11064,  32915), (-1, -3)\n        (-54349,  32914), ( 5, -3)\n        ( 43779, -10706), (-4,  1)\n        (-54387,  22009), ( 5, -2)\n        ( 21981, -32520), (-2,  3)\n        (-43493, -32517), ( 4,  3)\n        (-43470,  11101), ( 4, -1)\n        (-32549, -32514), ( 3,  3)\n        ( 21952,  32916), (-2, -3)\n        ( 54675, -21613), (-5,  2)\n        (-54367, -21608), ( 5,  2)\n        (-10720,  32912), ( 1, -3)\n        (-54399, -54327), ( 5,  5)\n        ( 11050, -21613), (-1,  2)\n        ( 32886, -43420), (-3,  4)\n        ( 21962, -10708), (-2,  1)\n        (-32584,  11103), ( 3, -1)\n        ( 43748,  32913), (-4, -3)\n        (-32565, -10703), ( 3,  1)\n        ( 21984, -32520), (-2,  3)\n        (-10768, -32513), ( 1,  3)\n        ( 32843,  43813), (-3, -4)\n        ( 21965, -54331), (-2,  5)\n        (-32581, -10705), ( 3,  1)\n        (-10739,  32910), ( 1, -3)\n        ( 54709,  32917), (-5, -3)\n        (-54378,  22012), ( 5, -2)\n        ( 43748,  11098), (-4, -1)\n        (-21647, -10712), ( 2,  1)\n        ( 11058, -10706), (-1,  1)\n        ( 11087, -54323), (-1,  5)\n        ( 32898, -10708), (-3,  1)\n        (-54387,  54718), ( 5, -5)\n        ( 32889,  11104), (-3, -1)\n        ( 43794, -10710), (-4,  1)\n        (-32569, -32513), ( 3,  3)\n        ( 21996,  11098), (-2, -1)\n        (-21679, -43422), ( 2,  4)\n        (-32553, -43424), ( 3,  4)\n        (-10761, -32522), ( 1,  3)\n        (-54372,  54723), ( 5, -5)\n        ( 21953,  11104), (-2, -1)\n        ( 11047,  22003), (-1, -2)\n        (-21639,  32917), ( 2, -3)\n        (-43444,  32911), ( 4, -3)\n        ( 54653,  11103), (-5, -1)\n        ( 43791,  54724), (-4, -5)\n        (-21672, -21610), ( 2,  2)\n        (-54367,  11106), ( 5, -1)\n        ( 32866,  22004), (-3, -2)\n        ( 32874,  43819), (-3, -4)\n        (-32533,  43820), ( 3, -4)\n        (-21648,  22010), ( 2, -2)\n        (-43493, -21616), ( 4,  2)\n        ( 43763,  43813), (-4, -4)\n        (-54359,  54720), ( 5, -5)\n        ( 43794,  43814), (-4, -4)\n        ( 54653, -54327), (-5,  5)\n        (-10739,  11099), ( 1, -1)\n        (-32577,  22008), ( 3, -2)\n        ( 54696, -32518), (-5,  3)\n        ( 11076,  54722), (-1, -5)\n        (-10776, -32522), ( 1,  3)\n        (-54358,  32912), ( 5, -3)\n        ( 11087, -10712), (-1,  1)\n        ( 43758, -21613), (-4,  2)\n        ( 54693, -54328), (-5,  5)\n        (-21628,  43820), ( 2, -4)\n        (-54343,  54725), ( 5, -5)\n        ( 21940, -54331), (-2,  5)\n        (-43492, -43427), ( 4,  4)\n        ( 21986,  43816), (-2, -4)\n        ( 11060, -10704), (-1,  1)\n        ( 54696,  11106), (-5, -1)\n        ( 32876,  32913), (-3, -3)\n        ( 43787,  22007), (-4, -2)\n        (-32586,  22008), ( 3, -2)\n        ( 32899, -10703), (-3,  1)\n    |]\n\n    let shift n = \n        input\n        |> Seq.map (fun ((x0,y0), (vx, vy)) -> (x0 + vx * n, y0 + vy * n))\n\n    let size points = \n        ((Seq.map fst points |> Seq.min , Seq.map snd points |> Seq.min), (Seq.map fst points |> Seq.max , Seq.map snd points |> Seq.max) )\n        |> (fun ((x1,y1),(x2,y2)) -> (x1,y1),(x2,y2), (x2-x1, y2-y1), x2-x1 + y2-y1 )\n\n    //for n in 10860.. 1 ..10950 do\n    //    shift n |> size |> printfn \"%d = %A\" n\n\n    let message n =\n        let points = shift n\n        let (x0, y0), _, (dx, dy) , _ = size points |>! print\n        let msg = Array.create (dx + 1) (Array.create (dy + 1) ' ')\n                    |> Array.map (fun _ -> (Array.create (dy + 1) ' '))\n        for (x, y) in points do \n            msg.[x - x0].[y - y0] <- '#'\n        for y in 0..dy do\n            [| for x in 0..dx -> msg.[x].[y] |] |> System.String \n            |> print\n\n    message 10905\n\n    ", "snpParentIdO": {"SnippetId" :"a2ffc7f6-f86e-46bb-8882-29d97b3fd4f9"}, "snpPredIds": [], "snpProperties": [], "snpModified": 1576499811538}], "modified": 1613599653610, "collapsed": []}