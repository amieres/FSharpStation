{"snippets": [{"snpId": {"SnippetId" :"0c368c5f-275f-43ac-bc76-dd2d21860dc0"}, "snpName": "Welcome to FShUI!", "snpContent": "", "snpParentIdO": null, "snpPredIds": [], "snpProperties": [["Explanation", "<h7>(Sounds like Feng Shui).</h7>\r\n*This documentation is work in progress...*\r\n\r\nA reactive UI for SPA (Single Page Applications).\r\n- developed in F#.\r\n-  **powered by [WebSharper].**\r\n[WebSharper]: http://websharper.com/\r\n\r\n### Hello World\r\n\r\nLets start with the classic **Hello World** program. \r\n\r\nYou can interact and try\r\nsome of the features using the editor on the right >--->>\r\n\r\nType or copy/paste the following code: (or click on <i class=\"rightArrow\" style=\"float:none;\"/> )\r\n\r\n    main h1 \"\" \"Hello, World\"\r\n    \r\n... and then click on `Try me! >>`.\r\n\r\nThat's it! A big **Hello, World** should appear on the lower-right pane.\r\n\r\nThe syntax works like this:\r\n- **`main`** : an identifier. \r\nIn particular, `main` is tied to the lower-right pane.\r\n \r\n- **`h1`** : an html tag (try other tags like `h3`,`div`,`b`, ...)\r\n- **`\"\"`** : in double quotes a list of attributes/styles\r\n (for instance \"color:blue;class=title\")\r\n- **`\"Hello, World\"`** : a string. \r\n\r\nNow lets add some style and attributes:\r\n\r\n    main h1 \"color:yellow;background:blue;title=HELLO WORLD\" \"Hello, World\"\r\n\r\nand classes (from Bootstrap):\r\n\r\n    main button \"class=btn btn-success;click=@{AF.Hello}\" \"Hello, World\"\r\n\r\nFeel free to play and try new things. \r\nWhen you are done, click `Next`.\r\n\r\n\r\n"]], "snpModified": 1570182854032}, {"snpId": {"SnippetId" :"a2ffc7f6-f86e-46bb-8882-29d97b3fd4f9"}, "snpName": "FShUI PlugIns", "snpContent": "main div \"overflow:auto\"\r\n: h4  \"\"  \"PlugIns\"\r\n:: div \"color:blue\"  AppFrmkUI.plugIns_list  \r\n: h5  \"\"  \r\n:: b  \"\"  \"> \" AppFrmkUI.plugIns_sel \r\n: h4  \"\"  \"Vars\"\r\n: div \"\"  AppFrmkUI.plgVars_list  \"> \" AppFrmkUI.plgVars_sel\r\n: h4  \"\"  \"Views\"\r\n: div \"\"  AppFrmkUI.plgViews_list \"> \" AppFrmkUI.plgViews_sel\r\n: h4  \"\"  \"Actions\"\r\n: div \"\"  AppFrmkUI.plgActs_list  \"> \" AppFrmkUI.plgActs_sel\r\n: h4  \"\"  \"Docs\"\r\n: div \"\"  AppFrmkUI.plgDocs_list  \"> \" AppFrmkUI.plgDocs_sel\r\n", "snpParentIdO": null, "snpPredIds": [], "snpProperties": [["Explanation", "**FShUI** is organized as a set of PlugIns \r\nthat interact with each other. \r\nThink of them as modules.\r\n\r\nEach PlugIn exposes a series of elements that other plugins can interact with.\r\nThere are different types of elements:\r\n\r\n| Element  | F# type       | Description |\r\n| -------  | -------       | ----------- |\r\n| **Var**      | `Var<string>` | a reactive variable that holds a text value\r\n| **View**     | `View<string>`| a reactive text value based on Vars\r\n| **Doc**      | `Doc`         | a doc is a reactive Html Node\r\n| **Action**   | `... -> unit` | an action that can be triggered by Html events\r\n| **Doc Func.**| `... -> Doc`  | a function that generates a Doc\r\n\r\n<style> thead { margin:8px } </style>\r\n<br>\r\n\r\nThere are 2 types of plugins:\r\n\r\n- **Layout** plugins coded using a special **FShUI** syntax.\r\n- PlugIns coded in F# using **[WebSharper]**.\r\n\r\nThe **Layout** plugins are dynamic and can be easily created and changed \r\nwithout the need to recompile. \r\n\r\nThe idea of having these\r\n2 types of plugins is that the more complex functionality is coded\r\nin **`F#`**, in one or more plugins, using the full power of **[WebSharper]** \r\n(including templates and Reactive variables of any type) and the \"last mile\" of development \r\nof the UI is composed or assembled using **Layouts**.\r\nThat makes for a highly flexible and easily extensible UI.\r\n\r\n### An example, this page.\r\n\r\nThis page is a good example of that phylosophy. \r\nThere is one main plugIn developed in **F#**  called **Snippets**,\r\nit provides the list of topics on the left and\r\nfunctionality to load and save the snippets. \r\nThe rest was created using a Layout plugIn called **lytDemo**.\r\n\r\nOn the right you can see a list of the\r\nplugins actually used in this page. The first 5 were coded in **F#**, \r\nthe last 2 are **Layout** plugins.\r\nAs you click on them you can see the\r\nelements they expose. \r\n- `AppFramework`: is the root plugin and is the heart of **FShUI**.\r\nThe **var** `mainDocV` governs what **Doc** is shown, in this case: `lytDemo.main`\r\n- `AF`: is a library of **Doc Functions** and **Actions**. You can create your own libraries.\r\n- `AppFrmkUI`: exposes the list of plugins and its elements. i.e. what you see on the right.\r\n- `Monaco`: exposes only one **Doc Function** for the \r\ntext editor in the upper right (code named *[Monaco]*, the same one used by VSCode)\r\n- `Snippets`: provides the organization of text snippets where this documentation is stored\r\n- `lytTarget`: is the right pane below the editor. \r\nIt shows what we code in the editor.\r\n- `lytDemo`: is this application. `lytDemo.main` is the main **Doc** or Html element.\r\n\r\nThe **Layout** plugins have a variable called `Layout` that \r\nholds the definition of the plugin. There is also a view called\r\n`ParseMsgs` that shows syntax errors found in the `Layout` definition.\r\nNotice that the value of the var `lytTarget.Layout` is \r\nthe same as the editor above it.\r\nAll the other elements \r\nlike `Docs`, `Views`, `Actions` or other `Vars` found in the PlugIn are generated dynamically\r\nfrom the definition.\r\n\r\n\r\n*Note: On the very top left corner of this page there is very very\r\ntiny (almost invisible) 'backstage' button that takes you to another view of the plugins and\r\ntheir elements. In there you can actually change variables and trigger actions and select \r\nthe main Doc. (If you have trouble getting back just refresh the page)*\r\n\r\n[Monaco]: https://microsoft.github.io/monaco-editor/\r\n[WebSharper]: http://websharper.com/"]], "snpModified": 1570183121660}, {"snpId": {"SnippetId" :"cc20f800-de06-4852-94e5-dd708c8ad00c"}, "snpName": "Lego Pieces", "snpContent": "legos div \"flex:1;display:flex;flex-wrap:wrap;align-items:center\" \n: lego1 \"background: antiquewhite                   \" lytDemo.markdownHtml\n: lego3 \"background: black       ; class=center     \" lytDemo.tryMe\n: lego1 \"background: lightblue                      \" lytDemo.fshuiEditor\n: lego3 \"background: red         ; class=center     \" lytDemo.prev\n: lego3 \"background: orange      ; class=center     \" lytDemo.next\n: lego1 \"background: lightblue   ; class=center     \" lytDemo.File\n: lego1 \"background: #e0e0e0                        \" lytDemo.navBar\n: lego2 \"background: green       ; class=center     \" lytDemo.addRemove\n: lego2 \"background: lightgreen  ; class=center     \" lytDemo.indentUnindent\n: lego1 \"background: pink        ; class=center     \" \n:: div \"width:90%\" lytDemo.SearchFor\n: lego1 \"background: blue        ; height:100%      \" lytDemo.editorCombo\n: lego1 \"background: yellow       \" \n:: h4 \"width:100%; color:blue\"  AppFrmkUI.plugIns_list  \n: lego1 \"background: navy        ; color: white     \" lytDemo.MarkDown0\n: lego2 \"background: cadetblue                      \" \"mainDocV: \" AppFramework.mainDocV\n: lego1 \"background: cyan       \" \n:: h4 \"width:100%\"  AppFrmkUI.plgDocs_list  \n\ntriggerV Var \"\"\n\nmain div \"overflow:auto\" legos\n: style \"display:none\" \"lego1, lego2, lego3 { border-top: dashed white 10px; box-shadow: 3px 12px 10px; overflow:hidden; display:flex; flex-direction: column; flex-wrap:wrap; margin:10px}\"\n: style \"display:none\" \"lego1 { min-height:120px; max-height:120px; min-width:250px; max-width:250px; padding: 10px}\"\n: style \"display:none\" \"lego2 { min-height: 80px; max-height: 80px; min-width:120px; max-width:120px; padding:  3px}\"\n: style \"display:none\" \"lego3 { min-height: 80px; max-height: 80px; min-width: 80px; max-width: 80px; padding:  2px}\"\n: style \"display:none\" \".center { position:relative } .center > * { position:absolute; margin: 0;  position: absolute;  top: 50%;  left: 50%;  -ms-transform: translate(-50%, -50%);  transform: translate(-50%, -50%) } \"\n: Doc\n:: Doc AF.TrigChange triggerV\n::: Action AF.SetVar \"AppFramework.mainDocV\" \"lytDemo.FullView1\"\n:: Docs \"\" // <== this extra parameter is necessary to avoid ambiguity with PlugIn Doc declaration\n", "snpParentIdO": {"SnippetId" :"a2ffc7f6-f86e-46bb-8882-29d97b3fd4f9"}, "snpPredIds": [], "snpProperties": [["Explanation", "Much like lego pieces,\r\nreactive components created\r\nwith **F# PlugIns**  can \r\nbe assembled dynamically using\r\n**Layout plugIns**.\r\nAltering the layout and configuration\r\nbecomes very easy and gives\r\nthe interface flexibility and\r\nversatility.\r\n\r\nThe pieces you see here are all reactive components \r\nthat form part of this site. One of them will let you\r\nchange the title and content of this page. \r\nSee if you can find it. Click on `normal view` when done."]], "snpModified": 1576499811538}, {"snpId": {"SnippetId" :"60cd51c8-7e48-4de1-9501-9cb16ec7f2ec"}, "snpName": "1. Layout PlugIns", "snpContent": "hello h1  \"\" \"Hello, World\"\nhow   h3  \"\" \"How are you?\"\nmain  div \"\" \"Greetings:\" hello how \"Good to know.\"\n ", "snpParentIdO": null, "snpPredIds": [], "snpProperties": [["Explanation", "\r\nA **Layout** definition is a series of lines where each line \r\ndefines precisely one element. A line usually starts with a name or identifier, \r\nfollowed by a command and then some parameters: \r\n\r\n`<name> <command> <p1> <p2> <p3> ...`\r\n\r\n#### Doc: reactive Html elements\r\n\r\nFor html elements, also called `Doc`s, \r\nthe command is any html tag like `div` or `span`. \r\nThe first parameter is a string with a list \r\nof attributes and/or styles separated by semicolons `;`.\r\nThe next parameters are the Doc's children identifiers and/or strings separated by spaces:\r\n\r\n`<name> <html-tag> \"<style1>:<v1>;<attrib1>=<v2>;...\" <child1> <child2> ...`\r\n\r\n    hello h1  \"\" \"Hello, World\"\r\n    how   h3  \"\" \"How are you?\"\r\n    main  div \"\" \"Greetings:\" hello how \"Good to know.\"\r\n\r\nNOTE: Just like in F#, elements need to be defined before being referenced.\r\n\r\nIn this example Docs `hello` & `how` were defined and then\r\nused in `main`.\r\n\r\nDifferent from F#, indentation is not important."]], "snpModified": 1575243381946}, {"snpId": {"SnippetId" :"31232cf3-a545-468e-bfbc-e60f15b9e034"}, "snpName": "1.1 Nesting Docs", "snpContent": "main div \"\"\n:    h1  \"\" \"Hello World!\"\n::   h4  \"\" \"child\"\n:::  h6  \"\" \"child of a child\"\n:    h2  \"\" \"How are you?\"\n ", "snpParentIdO": {"SnippetId" :"60cd51c8-7e48-4de1-9501-9cb16ec7f2ec"}, "snpPredIds": [], "snpProperties": [["Explanation", "Not all elements need to be given a name explicitly.\r\nA **Doc** can have its children defined anonymously by placing them below and\r\nreplacing the identifier with one or more colons **`:`**, like in this case:\r\n\r\n    main div \"\" \"Greetings:\"\r\n    :   h1  \"\" \"Hello World!\"\r\n    :   h2  \"\" \"How are you?\"\r\n    :   div \"\" \"Good to know\"\r\n\r\n**FShUI Layouts** use multiple colons **`:`** to determine\r\nthe nesting depth of a **Doc**.\r\n\r\nFor instance the following code places children below `Hello World!`:\r\n\r\n    main div \"\"\r\n    :    h1  \"\" \"Hello World!\"\r\n    ::   h4  \"\" \"child\"\r\n    :::  h6  \"\" \"child of a child\"\r\n    :    h2  \"\" \"How are you?\"\r\n\r\nAny level of nesting can be created this way.\r\n\r\n*Note*: even though they are anonymous, \r\nDocs are assigned an internal name based on \r\ntheir parent and position \r\nin the hierarchy.\r\n"]], "snpModified": 1571210878924}, {"snpId": {"SnippetId" :"ff88b916-61ba-4a09-aa4e-5641b031319b"}, "snpName": "1.2 Attributes & Style", "snpContent": "main     div \"class=container\" \n:        h1  \"id=Hello; color:blue\"          \"Hello World!\"\n:        h2  \"background:beige; id=HowAreU \" \"How are you?\"\n ", "snpParentIdO": {"SnippetId" :"60cd51c8-7e48-4de1-9501-9cb16ec7f2ec"}, "snpPredIds": [], "snpProperties": [["Explanation", "Lets add some color now.\r\n\r\nFor **Docs** the first parameter after the **html tag** defines\r\nthe attributes and styles as a string separated by semicolons **`;`**\r\n\r\n`<name> <tag> \"<attrib1>=<val1>; <style2>:<val2>; ...\" `\r\n\r\nThe separator after the name determines if it \r\nis an attribute or a style:\r\n- Attributes use '=' to separate name from value\r\n- Styles use ':' to separate name from value\r\n\r\n\r\n    main     div \"class=container\" \r\n    :        h1  \"id=Hello; color:blue\"          \"Hello World!\"\r\n    :        h2  \"background:beige; id=HowAreU \" \"How are you?\"\r\n\r\n*NOTE: Right now this method has some limitations for instance when an\r\nattribute value uses equals, colons, semicolons or newlines.\r\nIn the future this could be remedied using escape characters. \r\nFor now it is Ok, because **Layout PlugIns** are not intended \r\nfor complex development.*"]], "snpModified": 1571277530414}, {"snpId": {"SnippetId" :"0915d618-8b48-4fb3-8bea-49ff777b9cbb"}, "snpName": "1.3. Reactive Variables", "snpContent": "name Var   \"World\"\n\nsayHello   Docs\n:    h1    \"color:blue\"       \"Hello @{name}!\" name\n:    h2    \"background:beige\" \"How are you?\"\n\nmain div   \"display:flex;flex-direction:column\" sayHello\n:    span  \"\"   \"Enter name:\"\n::   Doc   AF.Input  \"\" name\n::   span  \"\"   \" <---- 'name' is a reactive variable!\"\n ", "snpParentIdO": {"SnippetId" :"60cd51c8-7e48-4de1-9501-9cb16ec7f2ec"}, "snpPredIds": [], "snpProperties": [["Explanation", "[WebSharper]: http://websharper.com/\r\n\r\nThe real power and magic of **FShUI** Layouts is in [WebSharper]'s reactive Variables and Docs.\r\nIn **FShUI** we only use text variables and views (ie. of types `Var<string>` and `View<string>`).\r\nThat works pretty well since Html is text based.\r\n\r\nHere is a simple example:\r\n\r\n    name Var   \"World\"\r\n    main h1   \"\" \"Name: \" name\r\n\r\nThe first line declares a reactive variable `name` \r\nwith the initial value `\"World\"`.\r\n\r\nHere is another way to reference the variable:\r\n\r\n    name Var   \"World\"\r\n    main h1   \"\" \"Hello @{name}!\"\r\n\r\nin this example we can change the value:\r\n\r\n    name Var   \"World\"\r\n\r\n    main div   \"\" \"Enter name:\"\r\n    :   Doc   AF.Input  \"\" name\r\n    :   h1    \"color:blue\"       \"Hello @{name}!\"\r\n    \r\n`: Doc AF.Input \"\" name` calls a Doc function that creates an `input` html tag\r\n\r\npassing the attributes and the variable to link.\r\n\r\n    name Var   \"World\"\r\n\r\n    sayHello   Docs\r\n    :    h1    \"color:blue\"       \"Hello @{name}!\" name\r\n    :    h2    \"background:beige\" \"How are you?\"\r\n\r\n    main div   \"display:flex;flex-direction:column\" sayHello\r\n    :    span  \"\"   \"Enter name:\"\r\n    ::   Doc   AF.Input  \"\" name\r\n    ::   span  \"\"   \" <---- 'name' is a reactive variable!\"\r\n"]], "snpModified": 1571277527087}, {"snpId": {"SnippetId" :"73b10a16-2bcc-45ec-b710-4e85d4eb837c"}, "snpName": "1.3.1 Dynamic text", "snpContent": "name      Var  \"World\"\n\nenterName ViewJS \"n => n == 'World'.slice(0,n.length) || n.length <= 1 ?'<---- Please enter your name':'' \" name\n\nsayHello Docs\n:   h1  \"color:blue\"       \"Hello @{name}!\"\n:   h2  \"background:beige\" \"How are you?\"\n\nmain div   \"display:block\" sayHello\n:    span  \"\"   \"Enter name:\"\n::   Doc   AF.Input  \"\" name\n::   span  \"\"   enterName \n ", "snpParentIdO": {"SnippetId" :"0915d618-8b48-4fb3-8bea-49ff777b9cbb"}, "snpPredIds": [], "snpProperties": [["Explanation", "### Work in progress...\r\n\r\n    name      Var  \"World\"\r\n\r\n    enterName ViewJS \"n => n == 'World'.slice(0,n.length) || n.length <= 1 ?'<---- Please enter your name':'' \" name\r\n\r\n    sayHello Docs\r\n    :   h1  \"color:blue\"       \"Hello @{name}!\"\r\n    :   h2  \"background:beige\" \"How are you?\"\r\n\r\n    main div   \"display:block\" sayHello\r\n    :    span  \"\"   \"Enter name:\"\r\n    ::   Doc   AF.Input  \"\" name\r\n    ::   span  \"\"   enterName \r\n"]], "snpModified": 1571277764461}, {"snpId": {"SnippetId" :"ff5259cd-726f-45b6-beea-da81a7fbc7be"}, "snpName": "More dynamics", "snpContent": "name      Var \"World\"\n\nenterName ViewJS \"n => n == 'World'.slice(0,n.length) || n.length <= 1 ?'<---- Please enter your name':'' \" name\nnow       ViewJS \"() => Date().toLocaleString()\" name\n\nsayHello Docs\n:   h1  \"color:blue\"       \"Hello @{name}!\"\n:   h2  \"background:beige\" \"How are you?\"\n\nmain1 div   \"display:block\" sayHello\n:    span  \"\"   \"Enter name:\"\n::   Doc   AF.Input  \"\" name\n::   span  \"\"   enterName \n\nmain2 div \"display:block\"\n:    h4    \"\"   now\n:    Docs \"AppFramework.mainDocV: \"\n:    Doc   AF.Input  \"\"  AppFramework.mainDocV\n:    Docs AppFramework.AppFwkClient\n\nmain Docs main1 main2\n ", "snpParentIdO": {"SnippetId" :"73b10a16-2bcc-45ec-b710-4e85d4eb837c"}, "snpPredIds": [], "snpProperties": [["Explanation", "### Work in progress...\r\n    name      Var \"World\"\r\n\r\n    enterName ViewJS \"n => n == 'World'.slice(0,n.length) || n.length <= 1 ?'<---- Please enter your name':'' \" name\r\n    now       ViewJS \"() => Date().toLocaleString()\" name\r\n\r\n    sayHello Docs\r\n    :   h1  \"color:blue\"       \"Hello @{name}!\"\r\n    :   h2  \"background:beige\" \"How are you?\"\r\n\r\n    main1 div   \"display:block\" sayHello\r\n    :    span  \"\"   \"Enter name:\"\r\n    ::   Doc   AF.Input  \"\" name\r\n    ::   span  \"\"   enterName \r\n\r\n    main2 div \"display:block\"\r\n    :    h4    \"\"   now\r\n    :    Docs \"AppFramework.mainDocV: \"\r\n    :    Doc   AF.Input  \"\"  AppFramework.mainDocV\r\n    :    Docs AppFramework.AppFwkClient\r\n\r\n    main Docs main1 main2"]], "snpModified": 1571324527690}, {"snpId": {"SnippetId" :"7876e3ca-bfc2-497b-98bb-a01d966b225a"}, "snpName": "Enter a color", "snpContent": "name  Var  \"World\"\ncolor Var  \"blue\"\n\nmain div   \"\"\n:    h1    \"color:@{color}\" \"Hello @{name}! \" \"How are you?\"\n:    div   \"\" \"My name is: \"\n::   Doc   AF.Input  \"\" name\n:    div   \"\" \"Enter a color: \"\n::   Doc   AF.Input  \"\"  color\n:    button \"click=@{AppFramework.Hello}\" \"HELLO!\"\n ", "snpParentIdO": {"SnippetId" :"0915d618-8b48-4fb3-8bea-49ff777b9cbb"}, "snpPredIds": [], "snpProperties": [["Explanation", "### Work in progress...\r\n\r\n    name  Var  \"World\"\r\n    color Var  \"blue\"\r\n\r\n    main div   \"\"\r\n    :    h1    \"color:@{color}\" \"Hello @{name}! \" \"How are you?\"\r\n    :    div   \"\" \"My name is: \"\r\n    ::   Doc   AF.Input  \"\" name\r\n    :    div   \"\" \"Enter a color: \"\r\n    ::   Doc   AF.Input  \"\"  color\r\n    :    button \"click=@{AppFramework.Hello}\" \"HELLO!\"\r\n\r\n\r\n\r\n"]], "snpModified": 1571277902492}, {"snpId": {"SnippetId" :"b98b7f94-eed2-4000-a534-a405c5677ef1"}, "snpName": "Dynamic Attributes", "snpContent": "name  Var \"World\"\ncolor Var \"yellow\"\nback  Var \"black\"\n\nmain div   \"display:block\"\n:    h1    \"color:black\" \"Hello @{name}! \" \"How are you?\"\n:    div   \"\" \"My name is: \"\n::   Doc   AF.Input  \"\" name\n:    div   \"color:@{color}\" \"Enter a color: \"\n::   Doc   AF.Input  \"\"  color\n:    div   \"color:@{back}\" \"background: \"\n::   Doc   AF.Input  \"\"  back\n:    h1    \"color:@{color};background:@{back}\" \"Hello @{name}! \" \"How are you?\"\n:    Doc   AF.InputLabel \"\" \"Color\" color\n ", "snpParentIdO": {"SnippetId" :"0915d618-8b48-4fb3-8bea-49ff777b9cbb"}, "snpPredIds": [], "snpProperties": [["Explanation", "### Work in progress...\r\n\r\n    name  Var \"World\"\r\n    color Var \"yellow\"\r\n    back  Var \"black\"\r\n\r\n    main div   \"display:block\"\r\n    :    h1    \"color:black\" \"Hello @{name}! \" \"How are you?\"\r\n    :    div   \"\" \"My name is: \"\r\n    ::   Doc   AF.Input  \"\" name\r\n    :    div   \"color:@{color}\" \"Enter a color: \"\r\n    ::   Doc   AF.Input  \"\"  color\r\n    :    div   \"color:@{back}\" \"background: \"\r\n    ::   Doc   AF.Input  \"\"  back\r\n    :    h1    \"color:@{color};background:@{back}\" \"Hello @{name}! \" \"How are you?\"\r\n    :    Doc   AF.InputLabel \"\" \"Color\" color\r\n"]], "snpModified": 1571277947433}, {"snpId": {"SnippetId" :"d5b3dde8-9685-4cfb-a068-8bb4873f2428"}, "snpName": "Hello Worldx", "snpContent": "name   Var \"World\"\ncolor  Var \"orange\"\nback   Var \"#a04\"\ncolors View \"black;white;silver;gray;lightgray;darkgray;#331;brown;red;orange;coral;pink;green;yellow;cyan;magenta;purple;beige;navy;blue\"\nAtt    View \"color:@{color};click=@{AppFramework.Hello};background:@{back}\"\n\nmain div   \"display:block\"\n:    h1    \"color:blue\" \"Hello @{name}! \" \"How are you?\"\n:    div   \"\" \"My name is: \"\n::   Doc   AF.Input  \"\"                         name\n:    div   \"color:@{color}\" \"Enter a color: \"\n::   Doc   AF.Input  \"\"                         color\n::   Doc   AF.Select \"\" \"-\"              colors color\n:    div   \"color:@{back}\" \"background: \"\n::   Doc   AF.Input  \"\"                         back\n::   Doc   AF.Select \"color:@{back}\" \"-\" colors back\n:    h1    Att \"Hello @{name}! \" \"How are you?\"\n:    div   Att \n::   Doc   AF.InputLabel   \"\" \"Name:\"           name\n::   Doc   AF.InputLabel   \"\" \"Color\"           color\n::   Doc   AF.InputLabel   \"\" \"Back:\"           back\n ", "snpParentIdO": {"SnippetId" :"0915d618-8b48-4fb3-8bea-49ff777b9cbb"}, "snpPredIds": [], "snpProperties": [["Explanation", "### Work in progress...\r\n\r\n    name   Var \"World\"\r\n    color  Var \"orange\"\r\n    back   Var \"#a04\"\r\n    colors View \"black;white;silver;gray;lightgray;darkgray;#331;brown;red;orange;coral;pink;green;yellow;cyan;magenta;purple;beige;navy;blue\"\r\n    Att    View \"color:@{color};click=@{AppFramework.Hello};background:@{back}\"\r\n\r\n    main div   \"display:block\"\r\n    :    h1    \"color:blue\" \"Hello @{name}! \" \"How are you?\"\r\n    :    div   \"\" \"My name is: \"\r\n    ::   Doc   AF.Input  \"\"                         name\r\n    :    div   \"color:@{color}\" \"Enter a color: \"\r\n    ::   Doc   AF.Input  \"\"                         color\r\n    ::   Doc   AF.Select \"\" \"-\"              colors color\r\n    :    div   \"color:@{back}\" \"background: \"\r\n    ::   Doc   AF.Input  \"\"                         back\r\n    ::   Doc   AF.Select \"color:@{back}\" \"-\" colors back\r\n    :    h1    Att \"Hello @{name}! \" \"How are you?\"\r\n    :    div   Att \r\n    ::   Doc   AF.InputLabel   \"\" \"Name:\"           name\r\n    ::   Doc   AF.InputLabel   \"\" \"Color\"           color\r\n    ::   Doc   AF.InputLabel   \"\" \"Back:\"           back\r\n\r\n"]], "snpModified": 1571275889262}, {"snpId": {"SnippetId" :"4cdbe438-72e7-4318-bcea-f8c7a93bd7fa"}, "snpName": "AF.DocReference", "snpContent": "number Var \"1\"\nnumberNot ViewJS \"n => 1 - n\"            number\nset0     Action AF.SetVar      \"lytTarget.number\" \"0\"\nset1     Action AF.SetVar      \"lytTarget.number\" \"1\"\n\nzero span \"color:red\"  \"Zero\"\none  span \"color:lightblue\" \"One\"\nnumber0 span \"\" zero\nnumber1 span \"\" zero \" \" one\n\nletter Var \"A\"\nsetA     Action AF.SetVar      \"lytTarget.letter\" \"A\"\nsetB     Action AF.SetVar      \"lytTarget.letter\" \"B\"\na       span \"color:yellow;background:black\"  \"'A'\"\nb       span \"color:black;background:yellow\"  \"'B'\"\nletterA span \"\" a\nletterB span \"\" a \" \" b\n\ncircle svg \"width=100;height=100\"\n: h3  \"margin: 0px\" \n:: button \"click=@{set0};color:red\"  \"Set 0\"\n:: Docs \" \"\n:: button \"click=@{set1};color:blue\" \"Set 1\"\n:  h1 \"color:white;background:black;margin: 0px\" \"Number \" number \": \"\n:: Doc AF.DocReference  \"lytTarget.number@{number}\"\n: h3  \"margin: 0px\" \n:: button \"click=@{setA};color:yellow\" \"Set A\"\n:: Docs \" \"\n:: button \"click=@{setB};color:black\" \"Set B\"\n:  h1 \"color:white;background:black;margin: 0px\" \"Letter @{letter}: \"\n:: Doc AF.DocReference \"lytTarget.letter@{letter}\"\n\nmain div \"\"\n: Docs circle\n: h5 \"font-weight:800\" \"Scroll all the way down this list:\"\n: div \"display:none\" lytDemo.mode\n: ol \"overflow:auto; height:150px;width:200px;background:#333;color:white\"\n:: li \"font-weight:800;color:yellow\" \"TOP\"\n:: li \"\" \"element\"\n:: li \"\" \"element\" \n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"font-weight:800;color:blue\" \"MIDDLE-------\"  \n:: li \"\" \"element\"\n:: li \"\" \"element\" \n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"font-weight:800;color:orange\" \"BOTTOM-------\"  \n ", "snpParentIdO": {"SnippetId" :"0915d618-8b48-4fb3-8bea-49ff777b9cbb"}, "snpPredIds": [], "snpProperties": [["Explanation", "### Work in progress...\r\n\r\n    number Var \"1\"\r\n    numberNot ViewJS \"n => 1 - n\"            number\r\n    set0     Action AF.SetVar      \"lytTarget.number\" \"0\"\r\n    set1     Action AF.SetVar      \"lytTarget.number\" \"1\"\r\n\r\n    zero span \"color:red\"  \"Zero\"\r\n    one  span \"color:lightblue\" \"One\"\r\n    number0 span \"\" zero\r\n    number1 span \"\" zero \" \" one\r\n\r\n    letter Var \"A\"\r\n    setA     Action AF.SetVar      \"lytTarget.letter\" \"A\"\r\n    setB     Action AF.SetVar      \"lytTarget.letter\" \"B\"\r\n    a       span \"color:yellow;background:black\"  \"'A'\"\r\n    b       span \"color:black;background:yellow\"  \"'B'\"\r\n    letterA span \"\" a\r\n    letterB span \"\" a \" \" b\r\n\r\n    circle svg \"width=100;height=100\"\r\n    : h3  \"margin: 0px\" \r\n    :: button \"click=@{set0};color:red\"  \"Set 0\"\r\n    :: Docs \" \"\r\n    :: button \"click=@{set1};color:blue\" \"Set 1\"\r\n    :  h1 \"color:white;background:black;margin: 0px\" \"Number \" number \": \"\r\n    :: Doc AF.DocReference  \"lytTarget.number@{number}\"\r\n    : h3  \"margin: 0px\" \r\n    :: button \"click=@{setA};color:yellow\" \"Set A\"\r\n    :: Docs \" \"\r\n    :: button \"click=@{setB};color:black\" \"Set B\"\r\n    :  h1 \"color:white;background:black;margin: 0px\" \"Letter @{letter}: \"\r\n    :: Doc AF.DocReference \"lytTarget.letter@{letter}\"\r\n\r\n    main div \"\"\r\n    : Docs circle\r\n    : h5 \"font-weight:800\" \"Scroll all the way down this list:\"\r\n    : div \"display:none\" lytDemo.mode\r\n    : ol \"overflow:auto; height:150px;width:200px;background:#333;color:white\"\r\n    :: li \"font-weight:800;color:yellow\" \"TOP\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\" \r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"font-weight:800;color:blue\" \"MIDDLE-------\"  \r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\" \r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"\" \"element\"\r\n    :: li \"font-weight:800;color:orange\" \"BOTTOM-------\"  "]], "snpModified": 1575249847599}, {"snpId": {"SnippetId" :"eca3b74d-eb51-4102-af52-c8dd92a018e0"}, "snpName": "Issue with SVG", "snpContent": "number Var \"1\"\nnumberNot ViewJS \"n => 1 - n\"            number\nset0     Action AF.SetVar      \"lytTarget.number\" \"0\"\nset1     Action AF.SetVar      \"lytTarget.number\" \"1\"\n\nzero span \"color:red\"  \"Zero\"\none  span \"color:lightblue\" \"One\"\nnumber0 span \"\" zero\nnumber1 span \"\" zero \" \" one\n\nletter Var \"A\"\nsetA     Action AF.SetVar      \"lytTarget.letter\" \"A\"\nsetB     Action AF.SetVar      \"lytTarget.letter\" \"B\"\na       span \"color:yellow;background:black\"  \"'A'\"\nb       span \"color:black;background:yellow\"  \"'B'\"\nletterA span \"\" a\nletterB span \"\" a \" \" b\n\ncircle svg \"width=100;height=100\"\n: h3  \"margin: 0px\" \n:: button \"click=@{set0};color:red\"  \"Set 0\"\n:: Docs \" \"\n:: button \"click=@{set1};color:blue\" \"Set 1\"\n:  h1 \"color:white;background:black;margin: 0px\" \"Number \" number \": \"\n:: Doc AF.DocReference  \"lytTarget.number@{number}\"\n: h3  \"margin: 0px\" \n:: button \"click=@{setA};color:yellow\" \"Set A\"\n:: Docs \" \"\n:: button \"click=@{setB};color:black\" \"Set B\"\n:  h1 \"color:white;background:black;margin: 0px\" \"Letter @{letter}: \"\n:: Doc AF.DocReference \"lytTarget.letter@{letter}\"\n\nmain div \"\"\n: Docs circle\n: h5 \"font-weight:800\" \"Scroll all the way down this list:\"\n: div \"display:none\" lytDemo.mode\n: ol \"overflow:auto; height:150px;width:200px;background:#333;color:white\"\n:: li \"font-weight:800;color:yellow\" \"TOP\"\n:: li \"\" \"element\"\n:: li \"\" \"element\" \n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"font-weight:800;color:blue\" \"MIDDLE-------\"  \n:: li \"\" \"element\"\n:: li \"\" \"element\" \n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"\" \"element\"\n:: li \"font-weight:800;color:orange\" \"BOTTOM-------\"  \n ", "snpParentIdO": {"SnippetId" :"0915d618-8b48-4fb3-8bea-49ff777b9cbb"}, "snpPredIds": [], "snpProperties": [["Explanation", "SVG do no work as normal\r\n**Docs**.\r\n\r\nI need to add support for SVGs."]], "snpModified": 1575270409157}, {"snpId": {"SnippetId" :"e7cb35cd-55d2-47ca-9b0f-b7485066e4ba"}, "snpName": "2. F# PlugIns", "snpContent": "WsTranslatorPlugIn PlugIn\n: Doc Form\n\nmain div \"overflow:auto\" WsTranslatorPlugIn.Form\n\n ", "snpParentIdO": null, "snpPredIds": [], "snpProperties": [["Explanation", "### Work in progress...\r\n\r\n    WsTranslatorPlugIn PlugIn\r\n    : Doc Form\r\n\r\n    main div \"overflow:auto\" WsTranslatorPlugIn.Form"]], "snpModified": 1575332488792}, {"snpId": {"SnippetId" :"7899157f-cdd7-495e-888e-53bf692247c8"}, "snpName": "3. Reference", "snpContent": "", "snpParentIdO": null, "snpPredIds": [], "snpProperties": [], "snpModified": 1575626287365}, {"snpId": {"SnippetId" :"a00306e1-4f97-485f-b5f3-56f522774eae"}, "snpName": "3.1 Layout PlugIn Syntax", "snpContent": "", "snpParentIdO": {"SnippetId" :"7899157f-cdd7-495e-888e-53bf692247c8"}, "snpPredIds": [], "snpProperties": [["Explanation", "\r\n- Each line defines an element\r\n- Comments start with //"]], "snpModified": 1576165846185}, {"snpId": {"SnippetId" :"e30419aa-b4c9-42b3-81d7-fe14939ab0bb"}, "snpName": "<name> Var  <initial>", "snpContent": "name Var \"John\"\nmain h3 \"\" \"My name is \" name\n ", "snpParentIdO": {"SnippetId" :"a00306e1-4f97-485f-b5f3-56f522774eae"}, "snpPredIds": [], "snpProperties": [["Explanation", "`Var` defines a reactive variable and gives it an initial value.\r\n\r\nParameters:\r\n\r\n-   `initial` : the initial value for the var\r\n\r\nThe following example\r\nthe variable `name`is created with value `\"John\"`:\r\n\r\n\r\n    name Var \"John\"\r\n    main h3 \"\" \"My name is \" name\r\n\r\n"]], "snpModified": 1576166586891}, {"snpId": {"SnippetId" :"285a3c44-8bdc-4c26-b5e9-b0c5a2c49a2f"}, "snpName": "<name> Doc  <docref> <p1> ...", "snpContent": "name Var \"John\"\nmain div \"\"\n: span \"\" \"Enter Name: \"\n: Doc AF.Input \"\" name\n: h2 \"\" \"My name is \" name\n ", "snpParentIdO": {"SnippetId" :"a00306e1-4f97-485f-b5f3-56f522774eae"}, "snpPredIds": [], "snpProperties": [["Explanation", "`Doc` allows to pass parameters\r\nto Doc functions.\r\n\r\nParameters:\r\n\r\n-   `docref` : name of the Doc function\r\n-   `p1`...  : a list of parameters like strings, vars and views\r\n\r\nThe following example\r\ninvokes `AF.Input` that creates \r\nan `input` tag and links it to the var `name`:\r\n\r\n\r\n    name Var \"John\"\r\n    main div \"\"\r\n    : span \"\" \"Enter Name: \"\r\n    : Doc AF.Input \"\" name\r\n    : h2 \"\" \"My name is \" name\r\n\r\n### Static Doc\r\n\r\nSometimes it is convenient to have a static Doc\r\ninstead of a Doc function. Static docs are\r\ncached once and then the same definition is used\r\ngoing forward. That can be convenient when using\r\n`AF.TrigAction` and `AF.TrigChange` and also with\r\nsplitters that use internal Vars because the static version\r\nremembers the last position.\r\n\r\nTo create a static Doc definition you can use Doc with a Doc that expects no parameters. \r\nThe following example shows two splitters,\r\nthe top one is dynamic the bottom\r\none is static. If you move them\r\nand then click on `Try me!` the top one\r\nwill snap back to 50%, and you may notice some flicker, while the bottom one\r\nwill remain in place:\r\n\r\n    Left  div \"background:blue\" \"Left\"\r\n    Right div \"background:red \" \"Right\"\r\n\r\n    split  vertical 0-50-100 Left Right // dynamic, not static\r\n    splitS Doc split                    // static version\r\n\r\n    main h1 \"flex:1;display:flex;flex-direction:column\" \r\n    : div \"flex:1;class=relative\" split \r\n    : div \"flex:1;class=relative\" splitS\r\n    "]], "snpModified": 1576165881990}, {"snpId": {"SnippetId" :"368c63f0-017d-43f6-a057-af6038667eb4"}, "snpName": "<name> Docs <doc1> <doc2> ...", "snpContent": "name       Var    \"John\"\nlength     ViewJS \"n => n.length\" name\ntypeOfName ViewJS \"n => n==0?'empty':n<5?'short':'long'\" length\nenter      View   \"Please enter a name\"\nanalysis   View   \"@{name} is a @{typeOfName} name\"\nfinal      ViewJS \"(n,a,b) => n==0?a:b\" length enter analysis\n\ndocs Docs\n: p \"\"\n: span \"\" \"Enter Name: \"\n: Doc AF.Input \"\" name\n: span \"\" \" @{length} characters\"\n: div \"\" final\n\nmain div \"\" \n: div \"\" \"Small. \" docs\n: h5 \"\" \"Medium. \" docs\n: h3 \"\" \"Big. \"    docs\n ", "snpParentIdO": {"SnippetId" :"a00306e1-4f97-485f-b5f3-56f522774eae"}, "snpPredIds": [], "snpProperties": [["Explanation", "`Docs` concatenates a group of `Doc` elements\r\nwithout placing them under a specific\r\nhtml tag.\r\n\r\nParameters:\r\n\r\n- `doc1` ... : elements of type `Doc` or text\r\n\r\nIn this example several Docs are concatenated and\r\nthen placed under different html tags:\r\n\r\n    name       Var    \"John\"\r\n    length     ViewJS \"n => n.length\" name\r\n    typeOfName ViewJS \"n => n==0?'empty':n<5?'short':'long'\" length\r\n    enter      View   \"Please enter a name\"\r\n    analysis   View   \"@{name} is a @{typeOfName} name\"\r\n    final      ViewJS \"(n,a,b) => n==0?a:b\" length enter analysis\r\n\r\n    docs Docs\r\n    : p \"\"\r\n    : span \"\" \"Enter Name: \"\r\n    : Doc AF.Input \"\" name\r\n    : span \"\" \" @{length} characters\"\r\n    : div \"\" final\r\n\r\n    main div \"\" \r\n    : div \"\" \"Small. \" docs\r\n    : h5 \"\" \"Medium. \" docs\r\n    : h3 \"\" \"Big. \"    docs\r\n"]], "snpModified": 1576168380433}, {"snpId": {"SnippetId" :"79a5a36b-a3b2-4c32-8d8d-61017ca44744"}, "snpName": "<name> View <p1> ...", "snpContent": "name     Var \"John\"\nhello    View \"Hello @{name}!\"\nmyName   View \"My name is \" name\ntogether View \"I said - \"\"@{myName}\"\" - he replied - \"\"@{hello}\"\".\"\n\nmain div \"\"\n: span \"\" \"Enter Name: \"\n: Doc AF.Input \"\" name\n: h2 \"\" myName\n: h2 \"\" hello\n: h4 \"\" together\n ", "snpParentIdO": {"SnippetId" :"a00306e1-4f97-485f-b5f3-56f522774eae"}, "snpPredIds": [], "snpProperties": [["Explanation", "`View` creates a reactive text value\r\nby concatenating several text values.\r\nA view can combine strings with Vars and other Views.\r\n\r\nParameters:\r\n\r\n-   `p1`...  : a list of parameters like strings, vars and views\r\n\r\nIn this example\r\nseveral views are created and then shown:\r\n\r\n    name     Var \"John\"\r\n    hello    View \"Hello @{name}!\"\r\n    myName   View \"My name is \" name\r\n    together View \"I said - \"\"@{myName}\"\" - he replied - \"\"@{hello}\"\".\"\r\n\r\n    main div \"\"\r\n    : span \"\" \"Enter Name: \"\r\n    : Doc AF.Input \"\" name\r\n    : h2 \"\" myName\r\n    : h2 \"\" hello\r\n    : h4 \"\" together\r\n"]], "snpModified": 1576166817586}, {"snpId": {"SnippetId" :"7639d4a8-9e9f-41a3-b0e8-105f0aadada4"}, "snpName": "<name> ViewJS <fun> <p1> ...", "snpContent": "counter Var \"0\"\ncounterP1 ViewJS \"n=>(console.log(n), Number(n)+1)\" counter\ncounterM1 ViewJS \"n=>Number(n)-1\" counter\n\nreset Action AF.SetVar \"lytTarget.counter\" \"0\"\ninc   Action AF.SetVar \"lytTarget.counter\" counterP1\ndec   Action AF.SetVar \"lytTarget.counter\" counterM1\n\nmain h3 \"\"\n: button \"click=@{dec}\"   \"-\"\n: Docs               counter\n: button \"click=@{inc}\"   \"+\"\n: div \"\"\n:: p \"\"\n:: button \"click=@{reset}\" \"reset\"\n ", "snpParentIdO": {"SnippetId" :"a00306e1-4f97-485f-b5f3-56f522774eae"}, "snpPredIds": [], "snpProperties": [["Explanation", "`ViewJS` creates a reactive text using a JavaScript\r\nfunction that receives several values.\r\n\r\nParameters:\r\n\r\n-   `fun` : the name of a function\r\nor a lambda function declared inline. It has to fit in one line.\r\n-   `p1`...  : a list of parameters like strings, vars and views\r\n\r\n\r\nIn this example several ViewJS are used to determine if\r\na name is long or short:\r\n\r\n    name       Var    \"John\"\r\n    length     ViewJS \"n => n.length\" name\r\n    typeOfName ViewJS \"n => n==0?'empty':n<5?'short':'long'\" length\r\n    enter      View   \"Please enter a name\"\r\n    analysis   View   \"@{name} is a @{typeOfName} name\"\r\n    final      ViewJS \"(n,a,b) => n==0?a:b\" length enter analysis\r\n\r\n    main div \"\"\r\n    : span \"\" \"Enter Name: \"\r\n    : Doc AF.Input \"\" name\r\n    : span \"\" \" @{length} characters\"\r\n    : h2 \"\" final\r\n\r\nThe requirement\r\nthat the JavaScript function fit in one line\r\nmay seem too constraining.\r\nThis is by design,\r\nyou do not want to code extensively\r\nin JavaScript, for that you have **F#**. You can create functions in F# plugins or \r\nstandalone .JS files and then \r\nreference them here. \r\n\r\nYou can also import some other\r\nfunction libraries and reference them here.\r\nThat is, for instance, how\r\nwe used [Marked.js] to convert markdown to html.\r\n\r\n[Marked.js]: https://marked.js.org/#/README.md#README.md"]], "snpModified": 1576167292135}, {"snpId": {"SnippetId" :"21d683ac-6215-48e4-b968-d403c5da7e82"}, "snpName": "<name> Action <actref> <p1> [p2]", "snpContent": "counter Var \"0\"\ncounterP1 ViewJS \"n=>Number(n)+1\" counter\ncounterM1 ViewJS \"n=>Number(n)-1\" counter\n\nreset Action AF.SetVar \"lytTarget.counter\" \"0\"\ninc   Action AF.SetVar \"lytTarget.counter\" counterP1\ndec   Action AF.SetVar \"lytTarget.counter\" counterM1\n\nmain h3 \"\"\n: button \"click=@{dec}\"   \"-\"\n: Docs               counter\n: button \"click=@{inc}\"   \"+\"\n: div \"\"\n:: p \"\"\n:: button \"click=@{reset}\" \"reset\"\n ", "snpParentIdO": {"SnippetId" :"a00306e1-4f97-485f-b5f3-56f522774eae"}, "snpPredIds": [], "snpProperties": [["Explanation", "`Action` defines a new action based on\r\nan existing `Action`\r\nby partial application of its parameters.\r\nActions can be used for html events.\r\nIt does not invoke the action.\r\n\r\nParameters:\r\n\r\n- `actref` : A reference to an action\r\n- `p1` `p2`: one or two parameters to pass\r\n\r\nThe following example creates a\r\ncounter application\r\nusing the action `AF.SetVar`\r\n\r\n    counter Var \"0\"\r\n    counterP1 ViewJS \"n=>Number(n)+1\" counter\r\n    counterM1 ViewJS \"n=>Number(n)-1\" counter\r\n\r\n    reset Action AF.SetVar \"lytTarget.counter\" \"0\"\r\n    inc   Action AF.SetVar \"lytTarget.counter\" counterP1\r\n    dec   Action AF.SetVar \"lytTarget.counter\" counterM1\r\n    \r\n    main h3 \"\"\r\n    : button \"click=@{dec}\"   \"-\"\r\n    : Docs               counter\r\n    : button \"click=@{inc}\"   \"+\"\r\n    : div \"\"\r\n    :: p \"\"\r\n    :: button \"click=@{reset}\" \"reset\"\r\n"]], "snpModified": 1576169176147}, {"snpId": {"SnippetId" :"6ba35a52-4744-4883-836b-3894b4f40a55"}, "snpName": "<name> Actions <act1> <act2> ...", "snpContent": "actions Actions \n: Actions AF.Hello \n: Actions AF.Hello\n\nmain button \"click=@{actions}\" \"Click Me!\"\n ", "snpParentIdO": {"SnippetId" :"a00306e1-4f97-485f-b5f3-56f522774eae"}, "snpPredIds": [], "snpProperties": [["Explanation", "`Actions` creates an action that combines several actions into one.\r\n\r\nParameters:\r\n\r\n- `act1`, `act2`, ... : Sequence of actions to be executed\r\n\r\n<p/>\r\n\r\n    actions Actions AF.Hello AF.Hello\r\n\r\n    main button \"click=@{actions}\" \"Click Me!\"\r\n\r\nMultiline is also possible here:\r\n\r\n    actions Actions \r\n    : Actions AF.Hello \r\n    : Actions AF.Hello\r\n\r\n    main button \"click=@{actions}\" \"Click Me!\"\r\n\r\n\r\n"]], "snpModified": 1576252774766}, {"snpId": {"SnippetId" :"8ec80c01-eeb5-448b-a6d2-7b437adb71a5"}, "snpName": "<name> vertical   <measures> <doc1> <doc2>", "snpContent": "split1 vertical 5-50-95\n: h5 \"background:aqua\" \"50px\" \n: h5 \"background:bisque\" \"The rest\"\n\nmain div \"class=relative;flex:1\" split1\n: style \"display:none\" \"h5 { margin:0px }\"\n ", "snpParentIdO": {"SnippetId" :"a00306e1-4f97-485f-b5f3-56f522774eae"}, "snpPredIds": [], "snpProperties": [["Explanation", "`vertical` and `horizontal` define a static or movable\r\nsplit between 2 Docs.\r\n\r\n<b> *Soon to be deprecated* </b>\r\n\r\nParameters:\r\n- measures: \r\n    -  N : A single positive value fixes the size of the first Doc `doc1` to `Npx`\r\n    - -N : A single negative value fixes the size of the second Doc `doc2` to `Npx`\r\n    - min-initial-max : 3 values separated by dashes with no spaces in between\r\n    represent the minimum, initial and maximum percentage of the first Doc `doc1`\r\n\r\nVertical fixed:\r\n\r\n    split1 vertical 50\r\n    : h5 \"background:aqua\" \"50px\" \r\n    : h5 \"background:bisque\" \"The rest\"\r\n\r\n    main div \"flex:1\" split1\r\n    : style \"display:none\" \"h5 { margin:0px }\"\r\n    \r\nVertical dynamic:\r\n\r\n    split1 vertical 5-50-95\r\n    : h5 \"background:aqua\" \"50px\" \r\n    : h5 \"background:bisque\" \"The rest\"\r\n\r\n    main div \"class=relative;flex:1\" split1\r\n    : style \"display:none\" \"h5 { margin:0px }\"\r\n    \r\n"]], "snpModified": 1576172859533}, {"snpId": {"SnippetId" :"15395997-a8d0-45f7-8f6d-30012899bac4"}, "snpName": "<name> horizontal <measures> <doc1> <doc2>", "snpContent": "split1 horizontal 0-50-100\n: h5 \"background:aqua\" \"50px\" \n: h5 \"background:bisque\" \"The rest\"\n\nmain div \"class=relative;flex:1\" split1\n: style \"display:none\" \"h5 { margin:0px }\"\n ", "snpParentIdO": {"SnippetId" :"a00306e1-4f97-485f-b5f3-56f522774eae"}, "snpPredIds": [], "snpProperties": [["Explanation", "`vertical` and `horizontal` define a static or movable\r\nsplit between 2 Docs.\r\n\r\n<b> *Soon to be deprecated* </b>\r\n\r\nParameters:\r\n- measures: \r\n    -  N : A single positive value fixes the size of the first Doc `doc1` to `Npx`\r\n    - -N : A single negative value fixes the size of the second Doc `doc2` to `Npx`\r\n    - min-initial-max : 3 values separated by dashes with no spaces in between\r\n    represent the minimum, initial and maximum percentage of the first Doc `doc1`\r\n    \r\nHorizontal fixed:\r\n\r\n    split1 horizontal 50\r\n    : h5 \"background:aqua\" \"50px\" \r\n    : h5 \"background:bisque\" \"The rest\"\r\n\r\n    main div \"flex:1\" split1\r\n    : style \"display:none\" \"h5 { margin:0px }\"\r\n        \r\nHorizontal dynamic:\r\n\r\n    split1 horizontal 0-50-100\r\n    : h5 \"background:aqua\" \"50px\" \r\n    : h5 \"background:bisque\" \"The rest\"\r\n\r\n    main div \"class=relative;flex:1\" split1\r\n    : style \"display:none\" \"h5 { margin:0px }\"\r\n        "]], "snpModified": 1576172860557}, {"snpId": {"SnippetId" :"e02717e1-69c2-4c83-8bb0-e07f12079528"}, "snpName": "<name> PlugIn", "snpContent": "Snippets  PlugIn\n: Var  curSnp_content\n: View parseOut\n\nmain div \"\" \n: h3 \"\" \"Layout Definition:\"\n: pre \"\" Snippets.curSnp_content    \n: h3 \"\" \"These are the error messages:\"\n: pre \"\" Snippets.parseOut\n\n. line with intentional error.\n.. and another one\n ", "snpParentIdO": {"SnippetId" :"a00306e1-4f97-485f-b5f3-56f522774eae"}, "snpPredIds": [], "snpProperties": [["Explanation", "`PlugIn` declares other plugins and their elements\r\n for the purpose of syntax checking. \r\nIf the other plugin is already loaded this \r\nis not necessary because its elements are known.\r\n\r\nParameters:\r\n\r\n    <name> PlugIn\r\n    : Var    <name>\r\n    : Doc    <name>\r\n    : View   <name>\r\n    : Action <name>\r\n<p>\r\n\r\nThe first line declares the name of\r\nthe plugin, the following lines\r\ndeclare the type and name of its elements.\r\n\r\n\r\nThe following example declares the plugin `Snippets` with a Var called `curSnp_content` \r\nand a View called `parseOut` \r\nand then shows them. Some intentional errors are left:\r\n\r\n    Snippets  PlugIn\r\n    : Var  curSnp_content\r\n    : View parseOut\r\n\r\n    main div \"\" \r\n    : h3 \"\" \"Layout Definition:\"\r\n    : pre \"\" Snippets.curSnp_content    \r\n    : h3 \"\" \"These are the error messages:\"\r\n    : pre \"\" Snippets.parseOut\r\n\r\n    . line with intentional error.\r\n    .. and another one\r\n\r\n"]], "snpModified": 1576170778401}, {"snpId": {"SnippetId" :"ad283e0a-78fb-4029-9e60-060a0ef40fdc"}, "snpName": "<name> <tag> <attrs> <doc1> ...", "snpContent": "main     div \"class=container\" \n:        h1  \"id=Hello; color:blue\"          \"Hello World!\"\n:        h2  \"background:beige; id=HowAreU \" \"How are you?\"\n ", "snpParentIdO": {"SnippetId" :"a00306e1-4f97-485f-b5f3-56f522774eae"}, "snpPredIds": [], "snpProperties": [["Explanation", "Creates any html tag\r\n\r\nParameters:\r\n\r\n- `attrs` : A string containing a semicolon  (`;`) separated list \r\nof attributes, and styles.\r\n- `doc1` ... : A sequence of Docs, Vars, Views\r\nthat are the children of the current tag.\r\n\r\nNested declarations are possible\r\nusing indented definitions starting with colons (`:`).\r\nThe level of nesting is determined by the number of colons, spacing is not used.\r\n\r\nThe following example shows some basic nesting:\r\n\r\n    main div \"\" \"EXAMPLE \" \"of nested tags:\"\r\n    :    h1  \"\" \"Hello World!\"\r\n    ::   h4  \"\" \"child\"\r\n    :::  h6  \"\" \"child of a child\"\r\n    :    h2  \"\" \"How are you?\" \r\n\r\n#### Attributes and Styles\r\n\r\nThe `attrs` parameter is a list of styles and/or\r\nattributes.\r\n\r\n`<name> <tag> \"<attrib1>=<val1>; <style2>:<val2>; ...\" `\r\n\r\nThe separator after the name determines if it \r\nis an attribute or a style:\r\n- Attributes use '=' to separate name from value\r\n- Styles use ':' to separate name from value\r\n\r\n\r\n    main     div \"class=container\" \r\n    :        h1  \"id=Hello; color:blue\"          \"Hello World!\"\r\n    :        h2  \"background:beige; id=HowAreU \" \"How are you?\"\r\n\r\n*NOTE: Right now this method has some limitations for instance when an\r\nattribute value uses equals, colons, semicolons or newlines.\r\nIn the future this could be remedied using escape characters. \r\nFor now it is Ok, because **Layout PlugIns** are not intended \r\nfor complex development.*    "]], "snpModified": 1576170747470}, {"snpId": {"SnippetId" :"de7f46da-8085-4d35-802e-f3a054262d72"}, "snpName": "3.2 PlugIn Library: AF", "snpContent": "", "snpParentIdO": {"SnippetId" :"7899157f-cdd7-495e-888e-53bf692247c8"}, "snpPredIds": [], "snpProperties": [], "snpModified": 1576175001090}, {"snpId": {"SnippetId" :"c4b9c8dd-b7e3-481c-9749-26d505cdc5b9"}, "snpName": "Doc: AF.DocReference <DocName>", "snpContent": "showtrue  h1 \"color:yellow  ; background: black; font-weight:900\" \"ON\"\nshowfalse h1 \"color:#444; background: black; font-weight:900\" \"OFF\"\n\nstate    Var \"false\"\nstateNot ViewJS \"v => v == 'false'\" state\ntoggle   Action AF.SetVar \"lytTarget.state\" stateNot\n\nmain div \"click=@{toggle};cursor:pointer\"\n: Doc AF.DocReference \"lytTarget.show@{state}\"\n: div \"display: none\" stateNot\n ", "snpParentIdO": {"SnippetId" :"de7f46da-8085-4d35-802e-f3a054262d72"}, "snpPredIds": [], "snpProperties": [["Explanation", "    showtrue  h1 \"color:yellow  ; background: black; font-weight:900\" \"ON\"\r\n    showfalse h1 \"color:#444; background: black; font-weight:900\" \"OFF\"\r\n\r\n    state    Var \"false\"\r\n    stateNot ViewJS \"v => v == 'false'\" state\r\n    toggle   Action AF.SetVar \"lytTarget.state\" stateNot\r\n\r\n    main div \"click=@{toggle};cursor:pointer\"\r\n    : Doc AF.DocReference \"lytTarget.show@{state}\"\r\n    : div \"display: none\" stateNot\r\n\r\n- **DocName** must be a full reference: `<plugin>.<doc>`."]], "snpModified": 1575626298271}, {"snpId": {"SnippetId" :"ebdd0854-f98c-4736-b29e-8d81c095a31d"}, "snpName": "Doc: AF.HtmlDoc <html>", "snpContent": "html Var \"<h3 style=\"\"color:blue;background:red\"\">Hello</h3>\"\nmain div \"\"\n: div \"\" \"Enter Html: \"\n: Doc AF.TextArea \"resize:both;height:200px;width:100%\" html\n: Doc AF.HtmlDoc     html\n ", "snpParentIdO": {"SnippetId" :"de7f46da-8085-4d35-802e-f3a054262d72"}, "snpPredIds": [], "snpProperties": [["Explanation", "`AF.HtmlDoc`creates a doc using free dynamic html.\r\n\r\nParameters:\r\n\r\n-   `attrs` : String with attributes and properties\r\n-   `var`   : name of the var to link\r\n\r\nThe following example\r\ninvokes `AF.HtmlDoc` to create \r\nhtml that the user can change dynamically:\r\n\r\n\r\n    html Var \"<h3 style=\"\"color:blue;background:red\"\">Hello</h3>\"\r\n    main div \"\"\r\n    : div \"\" \"Enter Html: \"\r\n    : Doc AF.TextArea \"resize:both;height:200px;width:100%\" html\r\n    : Doc AF.HtmlDoc     html\r\n\r\n\r\n"]], "snpModified": 1575626358808}, {"snpId": {"SnippetId" :"1f84aaf9-e49d-4833-a171-0230cafdb3be"}, "snpName": "Doc: AF.Input    <attrs> <var>", "snpContent": "name Var \"John\"\nmain div \"\"\n: span \"\" \"Enter Name: \"\n: Doc AF.Input \"\" name\n: h2 \"\" \"My name is \" name\n ", "snpParentIdO": {"SnippetId" :"de7f46da-8085-4d35-802e-f3a054262d72"}, "snpPredIds": [], "snpProperties": [["Explanation", "`AF.Input`creates an `<input>` html tag\r\nand links it with a reactive var.\r\n\r\nParameters:\r\n\r\n-   `attrs` : String with attributes and properties\r\n-   `var`   : name of the var to link\r\n\r\nThe following example\r\ninvokes `AF.Input` to create \r\nan `input` tag and links it to the var `name`:\r\n\r\n\r\n    name Var \"John\"\r\n    main div \"\"\r\n    : span \"\" \"Enter Name: \"\r\n    : Doc AF.Input \"\" name\r\n    : h2 \"\" \"My name is \" name\r\n\r\n\r\n"]], "snpModified": 1575626385494}, {"snpId": {"SnippetId" :"5091960c-2fe1-4749-a15e-9ffab1d0fbc8"}, "snpName": "Doc: AF.TextArea <attrs> <var>", "snpContent": "html Var \"<h3 style=\"\"color:blue;background:red\"\">Hello</h3>\"\nmain div \"\"\n: div \"\" \"Enter Html: \"\n: Doc AF.TextArea \"resize:both;height:200px;width:100%\" html\n: Doc AF.HtmlDoc     html\n ", "snpParentIdO": {"SnippetId" :"de7f46da-8085-4d35-802e-f3a054262d72"}, "snpPredIds": [], "snpProperties": [["Explanation", "`AF.TextArea`creates an `<input>` html tag\r\nand links it with a reactive var.\r\n\r\nParameters:\r\n\r\n-   `attrs` : String with attributes and properties\r\n-   `var`   : name of the var to link\r\n\r\nThe following example\r\ninvokes `AF.TextArea` to create \r\nan `textarea` tag and links it to the var `html`:\r\n\r\n\r\n    html Var \"<h3 style=\"\"color:blue;background:red\"\">Hello</h3>\"\r\n    main div \"\"\r\n    : div \"\" \"Enter Html: \"\r\n    : Doc AF.TextArea \"resize:both;height:200px;width:100%\" html\r\n    : Doc AF.HtmlDoc     html\r\n\r\n\r\n"]], "snpModified": 1575626414699}, {"snpId": {"SnippetId" :"f3f7dd88-7578-44be-bb3b-98082cc010e6"}, "snpName": "Doc: AF.Select   <attrs> <none> <vals> <var>", "snpContent": "name   Var \"World\"\ncolor  Var \"orange\"\nback   Var \"#a04\"\ncolors View \"black;white;silver;gray;lightgray;darkgray;#331;brown;red;orange;coral;pink;green;yellow;cyan;magenta;purple;beige;navy;blue\"\nAtt    View \"color:@{color};click=@{AppFramework.Hello};background:@{back}\"\n\nmain div   \"display:block\"\n:    div   \"\" \"Name: \"\n::   Doc   AF.Input  \"\"                         name\n:    div   \"\" \"Enter a color: \"\n::   Doc   AF.Input  \"\"                         color\n::   Doc   AF.Select \"\" \"-\"              colors color\n:    div   \"\" \"\"\n::   Doc   AF.Input  \"\"                         back\n::   Doc   AF.Select \"\" \"-\" colors back\n:    h1    Att \"Hello @{name}! \" \"How are you?\"\n ", "snpParentIdO": {"SnippetId" :"de7f46da-8085-4d35-802e-f3a054262d72"}, "snpPredIds": [], "snpProperties": [["Explanation", "Parameters:\r\n\r\n-   `attrs` : String with attributes and properties\r\n-   `none`  : Text to show when there is no selection\r\n-   `vals`  : Possible values separated with semicolon `;`\r\n-   `var`   : name of the var to link\r\n\r\nThe following example lists colors for text and background:\r\n\r\n    name   Var \"World\"\r\n    color  Var \"orange\"\r\n    back   Var \"#a04\"\r\n    colors View \"black;white;silver;gray;lightgray;darkgray;#331;brown;red;orange;coral;pink;green;yellow;cyan;magenta;purple;beige;navy;blue\"\r\n    Att    View \"color:@{color};click=@{AppFramework.Hello};background:@{back}\"\r\n\r\n    main div   \"display:block\"\r\n    :    div   \"\" \"Name: \"\r\n    ::   Doc   AF.Input  \"\"                         name\r\n    :    div   \"\" \"Enter a color: \"\r\n    ::   Doc   AF.Input  \"\"                         color\r\n    ::   Doc   AF.Select \"\" \"-\"              colors color\r\n    :    div   \"\" \"\"\r\n    ::   Doc   AF.Input  \"\"                         back\r\n    ::   Doc   AF.Select \"\" \"-\" colors back\r\n    :    h1    Att \"Hello @{name}! \" \"How are you?\"\r\n    "]], "snpModified": 1576284539631}, {"snpId": {"SnippetId" :"6039ccd9-f298-4ec0-9f37-cbde3cedd5ab"}, "snpName": "Doc: AF.TrigAction <trigger> <action>", "snpContent": "text    Var \"Enter values\"\ncounter Var \"0\"\ncounterP1 ViewJS \"n=>(console.log(n), Number(n)+1)\" counter\n\nreset Action AF.SetVar \"lytTarget.counter\" \"0\"\ninc   Action AF.SetVar \"lytTarget.counter\" counterP1\n\nleft5  ViewJS \"n=>n.slice(0,5)\" text\n\ntrigger0 Doc\n: Doc  AF.TrigAction left5 inc\n\nmain h3 \"\" trigger0 \"Type something: \"\n: Doc  AF.Input \"\" text\n: div \"\" \"Keystrokes count: \" counter\n:: p \"\"\n:: button \"click=@{reset}\" \"reset\"\n ", "snpParentIdO": {"SnippetId" :"de7f46da-8085-4d35-802e-f3a054262d72"}, "snpPredIds": [], "snpProperties": [["Explanation", "`AF.TrigAction` it links an action to a reactive value.\r\nEvery time the reactive value is triggered the action is executed.\r\n\r\nParameters:\r\n\r\n- `trigger` : text value like a view or a var.\r\n- `action` : action to be executed.\r\n\r\n**Var** must be a full reference name: `<plugin>.<doc>`.\r\n\r\n`AF.TrigAction` returns an invisible Doc that needs to be included\r\nin the current active in order for the \r\naction to take effect.\r\n\r\n\r\nThis example links the var `text` to the\r\naction `inc` to count keystrokes:\r\n\r\n    text    Var \"Enter values\"\r\n    counter Var \"0\"\r\n    counterP1 ViewJS \"n=>(console.log(n), Number(n)+1)\" counter\r\n\r\n    reset Action AF.SetVar \"lytTarget.counter\" \"0\"\r\n    inc   Action AF.SetVar \"lytTarget.counter\" counterP1\r\n\r\n    trigger Doc\r\n    : Doc  AF.TrigAction text inc\r\n\r\n    main h3 \"\" trigger \"Type something: \"\r\n    : Doc  AF.Input \"\" text\r\n    : div \"\" \"Keystrokes count: \" counter\r\n    :: p \"\"\r\n    :: button \"click=@{reset}\" \"reset\"\r\n    \r\n*NOTE*: TrigActions are triggered\r\nevery time the parent Doc is created.\r\nTo avoid unnecesary firing use \r\nthe multiline style as shown here:\r\n\r\n    trigger Doc\r\n    : Doc  AF.TrigAction text inc\r\n"]], "snpModified": 1575626433284}, {"snpId": {"SnippetId" :"6f01aaf0-3b47-4c50-abb3-e6c010a70ade"}, "snpName": "Doc: AF.TrigChange <trigger> <action>", "snpContent": "text    Var \"Enter values\"\ncounter Var \"0\"\ncounterP1 ViewJS \"n=>(console.log(n), Number(n)+1)\" counter\n\nreset Action AF.SetVar \"lytTarget.counter\" \"0\"\ninc   Action AF.SetVar \"lytTarget.counter\" counterP1\n\nleft5  ViewJS \"n=>n.slice(0,5)\" text\n\ntrigger5 Doc\n: Doc AF.TrigChange left5 inc\n\nmain h3 \"\" trigger5 \"Type something: \"\n: Doc  AF.Input \"\" text\n: div \"\" \"Changes in first 5: \" counter\n:: p \"\"\n:: button \"click=@{reset}\" \"reset\"\n ", "snpParentIdO": {"SnippetId" :"de7f46da-8085-4d35-802e-f3a054262d72"}, "snpPredIds": [], "snpProperties": [["Explanation", "`AF.TrigChange` it links an action to a reactive value.\r\nTrigChange differs from TrigAction in that the value must change\r\nin order to trigger the action.\r\nEvery time the reactive value changes the action is executed.\r\n\r\nParameters:\r\n\r\n- `trigger` : text value like a view or a var.\r\n- `action` : action to be executed.\r\n\r\n**Var** must be a full reference name: `<plugin>.<doc>`.\r\n\r\n`AF.TrigChange` returns an invisible Doc that needs to be included\r\nin the current active in order for the \r\naction to take effect.\r\n\r\n\r\nThis example links the view `left5` to the\r\naction `inc` to count changes only in the \r\nfirst 5 characters of `text`:\r\n\r\n    text    Var \"Enter values\"\r\n    counter Var \"0\"\r\n    counterP1 ViewJS \"n=>(console.log(n), Number(n)+1)\" counter\r\n\r\n    reset Action AF.SetVar \"lytTarget.counter\" \"0\"\r\n    inc   Action AF.SetVar \"lytTarget.counter\" counterP1\r\n\r\n    left5  ViewJS \"n=>n.slice(0,5)\" text\r\n    \r\n    trigger5 Doc\r\n    : Doc AF.TrigChange left5 inc\r\n\r\n    main h3 \"\" trigger5 \"Type something: \"\r\n    : Doc  AF.Input \"\" text\r\n    : div \"\" \"Changes in first 5: \" counter\r\n    :: p \"\"\r\n    :: button \"click=@{reset}\" \"reset\"\r\n    \r\n*NOTE*: TrigChange are triggered\r\nevery time the parent Doc is created.\r\nTo avoid unnecesary firing use \r\nthe multiline style as shown here:\r\n\r\n    trigger5 Doc\r\n    : Doc AF.TrigChange left5 inc\r\n"]], "snpModified": 1576300843330}, {"snpId": {"SnippetId" :"4a06137a-7709-4811-b6a9-8e9256770bbc"}, "snpName": "Action: AF.SetVar        <Var> <Value>", "snpContent": "counter Var \"0\"\ncounterP1 ViewJS \"n=>(console.log(n), Number(n)+1)\" counter\ncounterM1 ViewJS \"n=>Number(n)-1\" counter\n\nreset Action AF.SetVar \"lytTarget.counter\" \"0\"\ninc   Action AF.SetVar \"lytTarget.counter\" counterP1\ndec   Action AF.SetVar \"lytTarget.counter\" counterM1\n\nmain h3 \"\"\n: button \"click=@{dec}\"   \"-\"\n: Docs               counter\n: button \"click=@{inc}\"   \"+\"\n: div \"\"\n:: p \"\"\n:: button \"click=@{reset}\" \"reset\"\n ", "snpParentIdO": {"SnippetId" :"de7f46da-8085-4d35-802e-f3a054262d72"}, "snpPredIds": [], "snpProperties": [["Explanation", "`AF.SetVar` is an action to change the value of a var.\r\nSetVar defines the action\r\nwhich is invoked when\r\nan event is triggered or \r\nwith `AF.TrigAction` or  `AF.TrigChange`.\r\n\r\nParameters:\r\n\r\n- `Var` : name in quotes of the var to change\r\n- `Value` : text value to set the var to.\r\n\r\n**Var** must be a full reference name within qouble quotes: `\"<plugin>.<doc>\"`.\r\n\r\nThe following example creates a\r\ncounter application\r\nusing the action `AF.SetVar`\r\n\r\n    counter Var \"0\"\r\n    counterP1 ViewJS \"n=>(console.log(n), Number(n)+1)\" counter\r\n    counterM1 ViewJS \"n=>Number(n)-1\" counter\r\n\r\n    reset Action AF.SetVar \"lytTarget.counter\" \"0\"\r\n    inc   Action AF.SetVar \"lytTarget.counter\" counterP1\r\n    dec   Action AF.SetVar \"lytTarget.counter\" counterM1\r\n\r\n    main h3 \"\"\r\n    : button \"click=@{dec}\"   \"-\"\r\n    : Docs               counter\r\n    : button \"click=@{inc}\"   \"+\"\r\n    : div \"\"\r\n    :: p \"\"\r\n    :: button \"click=@{reset}\" \"reset\"\r\n"]], "snpModified": 1575626466920}, {"snpId": {"SnippetId" :"6c898432-b499-4d73-bac3-a7dc82a8b72c"}, "snpName": "Action: AF.SetVarDirect  <Var> <Value>", "snpContent": "counter Var \"0\"\ncounterP1 ViewJS \"n=>(console.log(n), Number(n)+1)\" counter\ncounterM1 ViewJS \"n=>Number(n)-1\" counter\n\nreset Action AF.SetVar \"lytTarget.counter\" \"0\"\ninc   Action AF.SetVar \"lytTarget.counter\" counterP1\ndec   Action AF.SetVar \"lytTarget.counter\" counterM1\n\nmain h3 \"\"\n: button \"click=@{dec}\"   \"-\"\n: Docs               counter\n: button \"click=@{inc}\"   \"+\"\n: div \"\"\n:: p \"\"\n:: button \"click=@{reset}\" \"reset\"\n ", "snpParentIdO": {"SnippetId" :"de7f46da-8085-4d35-802e-f3a054262d72"}, "snpPredIds": [], "snpProperties": [["Explanation", "It is an action to change the value of a var.\r\n\r\nParameters:\r\n\r\n- Var : name in quotes of the var to change\r\n- Value : text value to set the var to.\r\n\r\n**Var** must be a full reference name: `<plugin>.<doc>`.\r\n\r\nThe following example creates a\r\ncounter application\r\nusing the action `AF.SetVar`\r\n\r\n    counter Var \"0\"\r\n    counterP1 ViewJS \"n=>(console.log(n), Number(n)+1)\" counter\r\n    counterM1 ViewJS \"n=>Number(n)-1\" counter\r\n\r\n    reset Action AF.SetVar \"lytTarget.counter\" \"0\"\r\n    inc   Action AF.SetVar \"lytTarget.counter\" counterP1\r\n    dec   Action AF.SetVar \"lytTarget.counter\" counterM1\r\n\r\n    main h3 \"\"\r\n    : button \"click=@{dec}\"   \"-\"\r\n    : Docs               counter\r\n    : button \"click=@{inc}\"   \"+\"\r\n    : div \"\"\r\n    :: p \"\"\r\n    :: button \"click=@{reset}\" \"reset\"\r\n\r\n"]], "snpModified": 1575626474421}], "modified": 1613128581639, "collapsed": []}